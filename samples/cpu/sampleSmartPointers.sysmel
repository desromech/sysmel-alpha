struct TestStruct definition: {
    public field value type: Int64.

    method initialize => Void := {
        Std stdout << "TestStruct " << self address << " initialize"; nl.
        value := 13
    }.

    method finalize => Void := {
        Std stdout << "TestStruct " << self address << " finalize"; nl.
    }.
}.

Std MainEntryPoint: {:args :: Int32 |
    {
        let uniqueInt64Pointer mutable := Int64 uniqueNew.
        Std stdout << "uniqueInt64Pointer " << uniqueInt64Pointer getPointer << " : " << uniqueInt64Pointer _; nl.
        uniqueInt64Pointer _ := 42.
        Std stdout << "uniqueInt64Pointer " << uniqueInt64Pointer getPointer << " : " << uniqueInt64Pointer _; nl.
    }.

    {
        let smartPtr mutable := TestStruct uniqueNew.
        Std stdout << "TestStruct uniquePtr " << smartPtr getPointer << " : " << smartPtr _ value; nl.
        smartPtr _ value := 42.
        Std stdout << "TestStruct uniquePtr " << smartPtr getPointer << " : " << smartPtr _ value; nl.
    }.

    Std stdout << "UniquePtr movement assignment"; nl.
    {
        let outerSmartPtr mutable type: TestStruct uniquePtr.
        Std stdout << "outerSmartPtr " << outerSmartPtr getPointer; nl.
        {
            let innerSmartPtr mutable := TestStruct uniqueNew.
            Std stdout << "innerSmartPtr " << innerSmartPtr getPointer << " : " << innerSmartPtr _ value; nl.
            innerSmartPtr _ value := 42.
            Std stdout << "innerSmartPtr " << innerSmartPtr getPointer << " : " << innerSmartPtr _ value; nl.

            outerSmartPtr := innerSmartPtr asMoveReference.
        }.
        Std stdout << "outerSmartPtr " << outerSmartPtr getPointer << " : " << outerSmartPtr _ value; nl.
    }.

    Std stdout << "UniquePtr swap"; nl.
    {
        let outerSmartPtr mutable := TestStruct uniqueNew.
        Std stdout << "outerSmartPtr " << outerSmartPtr getPointer << " : " << outerSmartPtr _ value; nl.
        {
            let innerSmartPtr mutable := TestStruct uniqueNew.
            Std stdout << "innerSmartPtr " << innerSmartPtr getPointer << " : " << innerSmartPtr _ value; nl.
            innerSmartPtr _ value := 42.
            Std stdout << "innerSmartPtr " << innerSmartPtr getPointer << " : " << innerSmartPtr _ value; nl.

            outerSmartPtr swapWith: innerSmartPtr.
            Std stdout << "innerSmartPtr " << innerSmartPtr getPointer; nl.
        }.
        Std stdout << "outerSmartPtr " << outerSmartPtr getPointer << " : " << outerSmartPtr _ value; nl.
    }.

    {
        let sharedInt64Pointer mutable := Int64 sharedNew.
        Std stdout << "sharedInt64Pointer " << sharedInt64Pointer getPointer << " : " << sharedInt64Pointer _; nl.
        sharedInt64Pointer _ := 42.
        Std stdout << "sharedInt64Pointer " << sharedInt64Pointer getPointer << " : " << sharedInt64Pointer _; nl.
    }.

    {
        let smartPtr mutable := TestStruct sharedNew.
        Std stdout << "TestStruct sharedPtr " << smartPtr getPointer << " : " << smartPtr _ value; nl.
        smartPtr _ value := 42.
        Std stdout << "TestStruct sharedPtr " << smartPtr getPointer << " : " << smartPtr _ value; nl.
    }.

    Std stdout << "SharedPtr assign"; nl.
    {
        let outerSmartPtr mutable := TestStruct sharedNew.
        Std stdout << "outerSmartPtr " << outerSmartPtr getPointer << " : " << outerSmartPtr _ value; nl.
        {
            let innerSmartPtr mutable := outerSmartPtr.
            Std stdout << "innerSmartPtr " << innerSmartPtr getPointer << " : " << innerSmartPtr _ value; nl.
            innerSmartPtr _ value := 42.
            Std stdout << "innerSmartPtr " << innerSmartPtr getPointer << " : " << innerSmartPtr _ value; nl.
        }.
        Std stdout << "outerSmartPtr " << outerSmartPtr getPointer << " : " << outerSmartPtr _ value; nl.
    }.

    return: 0.
}.
