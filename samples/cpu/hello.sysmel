// Main function

function printValue(value: Int32) -> Void := {
    LibC printf("printValue Int32: %d\n", value).
}.

function printValue(value: Float32) -> Void := {
    LibC printf("printValue Float32: %f\n", value).
}.

function main externC (argc: Int32, argv: Char const pointer pointer) -> Int32 := {
    //let s type: SomeStruct.

    let v3f := Float32x3 x: 1.0 y: 2.0 z: 3.0.
    LibC printf("v3f %f %f %f\n", v3f x, v3f y, v3f z).

    let vp := v3f + (Float32x3 x: 4.0 y: 5.0 z: 6.0).
    LibC printf("vp %f %f %f\n", vp x, vp y, vp z).

    let vps := v3f + 3.0.
    LibC printf("vps %f %f %f\n", vps x, vps y, vps z).

    let v3d := Float64x3 x: v3f x y: v3f y z: v3f z.
    LibC printf("v3d %f %f %f\n", v3d x, v3d y, v3d z).

    //let matrix := Float32x3x3 identity + Float32x3x3 identity.
    //let matrix := Float32x3x3 rowMajorIndices * Float32x3x3 rowMajorIndices.
    let matrix := Float32x3x3 identity + Float32x3x3 identity.
    LibC printf(
"zm
    %f %f %f
    %f %f %f
    %f %f %f\n",
    matrix firstColumn x, matrix secondColumn x, matrix thirdColumn x,
    matrix firstColumn y, matrix secondColumn y, matrix thirdColumn y,
    matrix firstColumn z, matrix secondColumn z, matrix thirdColumn z).

    let mv3f := matrix * v3f.
    LibC printf("mv3f %f %f %f\n", mv3f x, mv3f y, mv3f z).

    let v3fm := v3f * matrix.
    LibC printf("v3fm %f %f %f\n", v3fm x, v3fm y, v3fm z).
    LibC printf("v3f dot: v3f %f\n", v3f dot: v3f).

    let v3fc := v3f cross: v3f.
    LibC printf("v3f cross: v3f %f %f %f\n", v3fc x, v3fc y, v3fc z).

    printValue(1).
    printValue(1.0).

    let i := 1.
    LibC printf("i address: %p\n", i address).
    until: i >= argc do: {
        if: i = 1 then: {
            LibC printf("First ").
        } else: {
            LibC printf("Not first ").
        }.

        LibC printf("argv %d %p %p: %s\n", i, argv[i] address, argv + i, argv[i]).
    } continueWith: {i := i + 1}.

    LibC printf("Hello World: %s\n", argv value).

    LibC printf("Object: %p\n", Smalltalk Object).
    LibC printf("Object class: %p\n", Smalltalk Object class).

    use: Smalltalk.

    let o := Object.
    LibC printf("o: %p\n", o).
    LibC printf("o class: %p\n", o class).
    LibC printf("Object basicNew: %p\n", Object basicNew).

    return: 0.
}.
