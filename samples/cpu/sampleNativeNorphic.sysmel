Compiler
    importModuleNamed: #"Norphic.Core";
	importModuleNamed: #"Sysmel.Graphics.SDL2";
	importModuleNamed: #"Sysmel.Graphics.FreeType2".

useNamespace: Stdn Graphics Core.
useNamespace: Stdn Graphics GUI.
useNamespace: Stdn Math Geometry.
useNamespace: Norphic.

function main externC (argc: Int32, argv: UInt8 const pointer pointer) => Int32 := {
    let windowSystem mutable := createWindowSystem().
    windowSystem ifNil: {
        return: 0
    }.
    windowSystem _ targetFrameRate: 20.

    ## Create the main window.
    let mainWindow := SystemWindowNorph createFor: windowSystem title: "Test Norphic" asMutableString extent: Int32x2(640, 480).
    mainWindow ifNil: {
        return: 0.
    }.

    mainWindow _ color: Float32x4 ones.

    ## Rectangle with border.
    {
        let borderedNorph := BorderedNorph sharedNew.
        borderedNorph _
            bounds: (RectangleF32 min: Float32x2(50.0f, 50.0f) extent: Float32x2(100.0f, 100.0f));
            color: Float32x4(1.0f, 0.0f, 0.0f, 1.0f);
            borderColor: Float32x4(0.0f, 0.0f, 0.0f, 1.0f).
        mainWindow _ addSubnorph: (borderedNorph upCastFor: Norph).
    }.

    ## Sample label
    {
        let label := LabelNorph sharedNew.
        label _
            bounds: (RectangleF32 min: Float32x2(200.0f, 80.0f) extent: Float32x2(100.0f, 100.0f));
            text: "Hello World" asMutableString.
        mainWindow _ addSubnorph: (label upCastFor: Norph).
    }.

    ## Sample button
    {
        let label := SimpleButtonMorph sharedNew.
        label _
            bounds: (RectangleF32 min: Float32x2(200.0f, 250.0f) extent: Float32x2(100.0f, 40.0f));
            text: "Button" asMutableString.
        mainWindow _ addSubnorph: (label upCastFor: Norph).
    }.

    ## Run the actual main loop.
    return: windowSystem _ runMainLoop.
}.
