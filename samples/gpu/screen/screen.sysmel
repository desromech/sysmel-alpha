// Screen rendering shader interface.
shader ScreenRendering interface uses: GPU GraphicsPipeline; definition: {
    descriptorSet Parameters maxBindings: 1000 := {
    }.

    stageio VertexOutput vertex definition: {
        output texcoord type: Float32x2; location: 0.
    }.

    stageio FragmentInput fragment definition: {
        input texcoord type: Float32x2; location: 0.
    }.

    stageio FragmentOutput fragment definition: {
        output color type: Float32x4; location: 0.
    }.
}.

// Screen quad vertex vertex shader.
shader ScreenQuadVertex uses: ScreenRendering;
definition: {
    vertex main := {
        let position := Float32x2().

        if: VertexStage vertexID = 0 then: {position := Float32x2(-1.0,  1.0)}.
        if: VertexStage vertexID = 1 then: {position := Float32x2( 1.0,  1.0)}.
        if: VertexStage vertexID = 2 then: {position := Float32x2(-1.0, -1.0)}.
        if: VertexStage vertexID = 3 then: {position := Float32x2( 1.0, -1.0)}.

        //VertexOutput texcoord := position*0.5 + 0.5.
        VertexOutput texcoord := position.
        VertexStage screenPosition := Float32x4(position, 0.0, 1.0).
    }.
}.
