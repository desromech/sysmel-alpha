namespace Stdn definition: {
namespace Graphics definition: {
namespace GUI definition: {

useNamespace: Stdn Graphics Core.

#**
 * I am a 2D rendering that takes care automatically of handling the underlying swap chain in a window.
 * I work by delegating my job into an actual SwapChainSurface
 *#
class WindowSwapChainSurface superclass: Surface; definition: {
    protected field window type: WindowRef.
    protected field swapChainSurface type: SwapChainSurfaceRef.

    meta definition: {
        method for: (window: WindowRef const ref) ::=> WindowSwapChainSurface sharedPointer := {
            let result := WindowSwapChainSurface sharedNew.
            result _ initializeWithWindow: window.
            result
        }.
    }.

    method initializeWithWindow: (theWindow: WindowRef const ref) ::=> Void := {
        window := theWindow
    }.

    override method beginDrawingWithCanvas => Canvas uniquePointer := {
        self beginDrawing ifFalse: {
            return: Canvas uniquePointer nil.
        }.

        return: swapChainSurface _ beginDrawingWithCanvas
    }.

    method beginDrawing => Boolean8 := {
        window ifNil: {
            return: false.
        }.

        let currentExtent := window _ extent.
        (swapChainSurface isNil || swapChainSurface _ extent ~= currentExtent) ifTrue: {

            let renderingDevice := window _ renderingDevice.
            let swapChainCreationInfo mutable := SwapChainCreationInfo()
                colorBufferFormat: PixelFormat B8G8R8A8_UNormSRGB;
                extent: currentExtent;
                layerCount: 1; ## Non-stereo
                bufferCount: 2; ## Use at least double buffering.
                yourself.

            let defaultCommandQueue := renderingDevice _ getDefaultCommandQueue.

            let newSwapChain := window _ createSwapChain: swapChainCreationInfo for: defaultCommandQueue.
            newSwapChain ifNil: {
                swapChainSurface reset.
                return: false.
            }.

            swapChainSurface := SwapChainSurface for: newSwapChain on: defaultCommandQueue on: renderingDevice withExtent: currentExtent.
        }.

        return: true.
    }.

}.

}. ## End of namespace Core
}. ## End of namespace Graphics
}. ## End of namespace Stdn
