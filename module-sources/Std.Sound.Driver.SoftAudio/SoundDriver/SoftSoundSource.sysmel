namespace Std definition: {
namespace Sound definition: {

#**
 * I am a software based sound buffer.
 *#
class SoftSoundSource superclass: SoundSource; definition: {
    field description type: SoundSourceDescription.
    field soundBuffer type: SoftSoundBufferRef.
    field streamSource type: SoundStreamSourceRef.
    field playbackDevice type: SoftPlaybackDeviceRef.
    field isPlaying type: Boolean8.
    field playbackPosition type: UIntPointer.

    method initializeWith: (theDescription: SoundSourceDescription const ref) playbackDevice: (theDevice: SoftPlaybackDeviceRef const ref) ::=> Void := {
        description := theDescription.
        playbackDevice := theDevice.
    }.

    method initializeWithStreamSource: (theStreamSource: SoundStreamSourceRef const ref) playbackDevice: (theDevice: SoftPlaybackDeviceRef const ref) ::=> Void := {
        streamSource := theStreamSource.
        playbackDevice := theDevice.
    }.

    method resetPlaybackPosition => Void := {
        playbackPosition := 0.
        streamSource ifNotNil: {
            streamSource resetState.
        }.
    }.

    override method play => Void := {
        self resetPlaybackPosition.
        self resume.
    }.

    override method resume => Void := {
        isPlaying := true.
        playbackDevice activateSoundSource: self asRCRef.
    }.

    override method stop => Void := {
        self resetPlaybackPosition.
        self pause
    }.

    override method pause => Void := {
        isPlaying := false.
    }.

    method mixSamples: (sampleCount: UInt32) samplePeriod: (samplePeriod: Float32) ontoF32x2Buffer: (mixBuffer: Float32x2 pointer) ::=> Boolean8 := {
        isPlaying ifFalse: {return: false}.

        streamSource ifNil: {
            true
        } ifNotNil: {
            streamSource mixSamples: sampleCount samplePeriod: samplePeriod ontoF32x2Buffer: mixBuffer pitch: 1 gain: 1.
            streamSource atEnd not
        }.
    }.

    override method soundBuffer: (theSoundBuffer: SoundBufferRef const ref) ::=> Void := {
        soundBuffer := theSoundBuffer downCastFor: SoftSoundBuffer
    }.

    override method soundBuffer ::=> SoundBufferRef
        := soundBuffer upCastFor: SoundBuffer.

    override method soundStreamSource: (theSoundStreamSource: SoundStreamSourceRef const ref) ::=> Void := {
        streamSource := theSoundStreamSource
    }.

    override method soundStreamSource ::=> SoundStreamSourceRef
        := streamSource.
}.

compileTime constant SoftSoundSourceRef := SoftSoundSource rcRef.

} ## End of namespace Sound
} ## End of namespace Std
