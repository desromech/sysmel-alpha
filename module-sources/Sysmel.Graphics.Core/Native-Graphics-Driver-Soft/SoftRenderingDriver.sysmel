namespace Stdn definition: {
namespace Graphics definition: {
namespace Core definition: {


#**
 * I am a CPU based rendering driver. Since I do not require special graphical support, I am constructed as a singleton.
 *#
class SoftRenderingDriver superclass: RenderingDriver; definition: {
    override method initialize => Void := {
        RenderingDriverRegistry default registerDriver: self address
    }.

    override method finalize => Void := {
        RenderingDriverRegistry default unregisterDriver: self address
    }.

    field mainDevice type: SoftRenderingDevice sharedPointer.

    meta definition: {
        global Singleton mutable type: SoftRenderingDriver.
    }.

    override const method isSoftRenderingDriver => Boolean8
        := true.

    override method getMainDevice => RenderingDevice sharedPointer := {
        mainDevice ifNil: {
            mainDevice := SoftRenderingDevice sharedNew.
        }.

        mainDevice upCastFor: RenderingDevice
    }.
}.

}. ## End of namespace Core
}. ## End of namespace Graphics
}. ## End of namespace Stdn
