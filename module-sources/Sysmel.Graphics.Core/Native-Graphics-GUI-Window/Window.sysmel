namespace Stdn definition: {
namespace Graphics definition: {
namespace GUI definition: {

useNamespace: Stdn Graphics Core.

#**
 * I represent an interface into a window system window.
 *#
class Window superclass: Object; definition: {
    public field eventHandler type: EventHandler sharedPointer.

    #**
     * This method closes the window.
     *#
    virtual method close => Void
        := void.

    #**
     * This method delivers an event into an event handler that is present in the window.
     *#
    virtual method deliverEvent: (event: Event ref) ::=> Void := {
        eventHandler ifNotNil: {
            eventHandler _ processEvent: event
        }
    }.

    #**
     * This method creates a default drawing surface whose rendering method is chosen by the backend.
     *#
    abstract method renderingDriver => RenderingDriver sharedPointer.

    #**
     * This method creates a default drawing surface whose rendering method is chosen by the backend.
     *#
    abstract method createDefaultDrawingSurface => Surface sharedPointer.


    #**
     * This method takes capture of grabbing a mouse capture.
     *#
    virtual method grabMouseCapture => Void := {

    }.

    #**
     * This method takes capture of grabbing a mouse capture.
     *#
    virtual method releaseMouseCapture => Void := {

    }.

    #**
     * This method sets the cursor that is active on the window.
     *#
    virtual method setCursor: (cursor: Cursor sharedPointer const ref) ::=> Void := {

    }.
}.

compileTime constant WindowRef := Window sharedPointer.
compileTime constant WindowWeakRef := Window weakPointer.

}. ## End of namespace GUI
}. ## End of namespace Graphics
}. ## End of namespace Stdn
