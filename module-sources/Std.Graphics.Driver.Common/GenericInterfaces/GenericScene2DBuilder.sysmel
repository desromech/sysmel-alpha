namespace Std definition: {
namespace Graphics definition: {
namespace Core definition: {

#**
 * I am a generic implementation for a scene 2D builder
 *#
class GenericScene2DBuilder superclass: Scene2D Builder; definition: {
    public field device type: RenderingDeviceWeakPtr.

    override method createTextureHandleFor: (texture: Std RCObjectPtr const ref) view: (textureView: Std RCObjectPtr const ref) ::=> StrongTextureHandleRef := {
        TextureWithView new
            texture: (texture downCastFor: Texture);
            textureView: (textureView downCastFor: TextureView);
            upCastFor: StrongTextureHandle
    }.

    override method createTextureFromForm: (form: FormRef const ref) ::=> StrongTextureHandleRef := {
        StrongTextureHandleRef nil
    }.
}.

compileTime constant GenericScene2DBuilderPtr := GenericScene2DBuilder rcPointer.

}. ## End of namespace Core
}. ## End of namespace Graphics
}. ## End of namespace Std
