namespace Std definition: {
namespace Graphics definition: {
namespace Core definition: {

#**
 * I am a rendering device specific font cache that merges glyphs into texture atlasses.
 * I am intended to be used with GPU accelerated rendering devices.
 *#
class TextureAtlasRenderingDeviceFontCache superclass: RenderingDeviceFontCache; definition: {
    private field device type: RenderingDeviceWeakRef.

    private field cacheDictionary type: Std Collections Dictionary(FontFaceWithSizeRef, FontFaceWithSizeRef).
    private field cacheDictionaryMutex type: Std Mutex.

    method initializeWithDevice: (theDevice: RenderingDeviceWeakRef const ref) ::=> Void := {
        device := theDevice.
    }.

    override method getOrCreateAdaptedFontFaceWithSize: (fontFaceWithSize: FontFaceWithSizeRef const ref) ::=> FontFaceWithSizeRef := {
        fontFaceWithSize ifNil: {
            return: FontFaceWithSizeRef nil
        }.

        cacheDictionaryMutex withLock: {
            cacheDictionary at: fontFaceWithSize ifAbsentPut: {:: FontFaceWithSizeRef |
                TextureAtlasFontFaceWithSize new
                    initializeWith: fontFaceWithSize for: device;
                    upCastFor: FontFaceWithSize
            }
        }
    }.
}.

}. ## End of namespace Core
}. ## End of namespace Graphics
}. ## End of namespace Std
