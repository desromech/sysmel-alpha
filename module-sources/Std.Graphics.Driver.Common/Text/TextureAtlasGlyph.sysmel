namespace Std definition: {
namespace Graphics definition: {
namespace Core definition: {

useNamespace: Std Math Geometry.

#**
 * I am a texture atlas glyph.
 *#
class TextureAtlasGlyph superclass: Glyph; definition: {
    private field textureAtlasBounds type: RectangleF32.

    method initializeAdaptingFrom: (other: GlyphRef const ref) inAtlasLocation: (atlasLocation: RectangleF32) ::=> Void := {
        drawOrigin := other drawOrigin.

        extent := other extent.

        horizontalBearing := other horizontalBearing.
        horizontalAdvance := other horizontalAdvance.

        verticalBearing := other verticalBearing.
        verticalAdvance := other verticalAdvance.

        textureAtlasBounds := atlasLocation.
    }.

    override method isRenderingDeviceSpecificGlyph => Boolean8
        := true.

    override method textureAtlasBounds => RectangleF32
        := textureAtlasBounds.
}.

compileTime constant TextureAtlasGlyphPtr := TextureAtlasGlyph rcPointer.

}. ## End of namespace Core
}. ## End of namespace Graphics
}. ## End of namespace Std
