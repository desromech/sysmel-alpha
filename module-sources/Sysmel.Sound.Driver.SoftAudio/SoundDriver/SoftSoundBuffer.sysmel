namespace Std definition: {
namespace Sound definition: {

#**
 * I am a software based sound buffer.
 *#
class SoftSoundBuffer superclass: SoundBuffer; definition: {
    field description type: SoundBufferDescription.
    field dataSize type: UIntPointer.
    field data type: UInt8 uniquePointer.

    method initializeWithDescription: (theDescription: SoundBufferDescription const ref) ::=> Void := {
        description := theDescription.
        dataSize := description bufferByteSize.
        data reset: (Std zmalloc(dataSize) reinterpretCastTo: UInt8 pointer)
    }.

    override method upload: (newData: Void const pointer) size: (size: UIntPointer) offset: (offset: UIntPointer) ::=> Void := {
        size + offset > dataSize ifTrue: {return: void}.
        Std memcpy(data getPointer + offset, newData, size).
    }.
}.

compileTime constant SoftSoundBufferPtr := SoftSoundBuffer rcPointer.

} ## End of namespace Sound
} ## End of namespace Std
