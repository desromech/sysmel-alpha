namespace Stdn definition: {
namespace Sound definition: {

#**
 * I represent a specific sound device.
 *#
class PlaybackDevice superclass: SharedObject; definition: {
    virtual method destroy => Void := {}.

    virtual method pause => Void := {}.
    virtual method resume => Void := {}.

    virtual method newSoundBuffer: (description: SoundBufferDescription const ref) ::=> SoundBufferPtr
        := self newSoundBuffer: description initialData: nil.

    virtual method newSoundBuffer: (description: SoundBufferDescription const ref) initialData: (initialData: Void const pointer) ::=> SoundBufferPtr
        := SoundBufferPtr nil.

    virtual method newSoundSource: (description: SoundSourceDescription const ref) ::=> SoundSourcePtr
        := SoundSourcePtr nil.

    virtual method newSoundSourceForStreamSource: (streamSource: SoundStreamSourcePtr const ref) ::=> SoundSourcePtr
        := SoundSourcePtr nil.

    virtual method newSoundSourceForStaticGenerator: (generator: SoundGeneratorPtr const ref) ::=> SoundSourcePtr
        := self newSoundSourceForStreamSource: (generator upCastFor: SoundStreamSource).
}.

compileTime constant PlaybackDevicePtr := PlaybackDevice sharedPointer.

} ## End of namespace Sound
} ## End of namespace Stdn
