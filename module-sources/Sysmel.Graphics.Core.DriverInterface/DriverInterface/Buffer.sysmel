namespace Stdn definition: {
namespace Graphics definition: {
namespace Core definition: {

#**
 * I am a handle for a buffer.
 *#
class Buffer superclass: RenderingDriverObjectHandle; definition: {

    const abstract method description => BufferDescription.

    const virtual method stride => UIntPointer
        := self description stride.

    const virtual method size => UIntPointer
        := self description size.

    abstract method map: (access: MappingAccessMask) ::=> Void pointer.
    abstract method unmap ::=> Void.

    abstract method uploadAt: (offset: UIntPointer) size: (size: UIntPointer) data: (data: Void const pointer) ::=> Void.
    abstract method readAt: (offset: UIntPointer) size: (size: UIntPointer) into: (buffer: Void pointer) ::=> Void.

    virtual method flushAt: (offset: UIntPointer) size: (size: UIntPointer) ::=> Void := {}.
    virtual method invalidateAt: (offset: UIntPointer) size: (size: UIntPointer) ::=> Void := {}.
}.

compileTime constant BufferPtr := Buffer sharedPointer.

}. ## End of namespace Core
}. ## End of namespace Graphics
}. ## End of namespace Stdn
