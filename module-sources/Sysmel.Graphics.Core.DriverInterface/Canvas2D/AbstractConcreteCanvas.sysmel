namespace Stdn definition: {
namespace Graphics definition: {
namespace Core definition: {

useNamespace: Stdn Math LinearAlgebra.
useNamespace: Stdn Math Geometry.

#**
 * I am a canvas that provides the bare minimum boiler plater facilities.
 *#
class AbstractConcreteCanvas superclass: Canvas; definition: {
    protected field transform type: AffinePostTransform2dF32.
    protected field drawingState type: CanvasDrawingState.
    protected field paintState type: CanvasPaintState.
    protected field currentFontFaceWithSize type: FontFaceWithSize sharedPointer.
    protected field currentClipRectangle type: RectangleF32.

    method resetCanvasState => Void := {
        drawingState := CanvasDrawingState()
            blendingMode: BlendingMode CompositeAlphaOver;
            yourself.
        currentClipRectangle := RectangleF32 fullSpace.
        transform setIdentity.
    }.

    override method transform => AffinePostTransform2dF32 ref
        := transform.

    override method drawingState => CanvasDrawingState ref
        := drawingState.

    override method paintState => CanvasPaintState ref
        := paintState.


    override method fillRectangle: (rectangle: RectangleF32) ::=> Void := {
        self
            fillTriangle: rectangle bottomLeft tc: Float32x2(0, 0) p2: rectangle bottomRight tc: Float32x2(1, 0) p3: rectangle topRight tc: Float32x2(1, 1);
            fillTriangle: rectangle topRight tc: Float32x2(1, 1) p2: rectangle topLeft tc: Float32x2(0, 1) p3: rectangle bottomLeft tc: Float32x2(0, 0)
    }.

    override method fontFaceWithSize => FontFaceWithSize sharedPointer const ref
        := currentFontFaceWithSize.

    override method fontFaceWithSize: (font: FontFaceWithSize sharedPointer const ref) ::=> Void := {
        currentFontFaceWithSize := font.
    }.

    abstract method doSetClipRectangle: (aRectangle: RectangleF32) ::=> Void.

    override method currentClipRectangle => RectangleF32 := {
        currentClipRectangle
    }.

    override method applyClipRectangle: (aRectangle: RectangleF32) ::=> Void := {
        currentClipRectangle := currentClipRectangle intersectionWith: aRectangle.
        self doSetClipRectangle: currentClipRectangle.
    }.

    override method restoreClipRectangle: (aRectangle: RectangleF32) ::=> Void := {
        currentClipRectangle := aRectangle.
        self doSetClipRectangle: currentClipRectangle.
    }.
}.

}. ## End of namespace Core
}. ## End of namespace Graphics
}. ## End of namespace Stdn
