namespace Std definition: {
namespace Graphics definition: {
namespace Core definition: {

#**
 * Shader signature description.
 *#
struct ShaderSignatureDescription definition: {
    public field banks type: Std Collections Vector(ShaderSignatureBankDescription).
    public field pushConstantsSize type: UIntPointer.

    const inline method = (other: SelfType const ref) ::=> Boolean8
        := banks = other banks && pushConstantsSize = other pushConstantsSize.

    Std Utility NotEqualsMethodMixin.

    const inline method hash ::=> Std Hash
        := banks hash ^ pushConstantsSize hash.

    const method applyToBuilder: (builder: ShaderSignatureBuilderRef const ref) ::=> Void := {
        banks do: {:each :: Void |
            each applyToBuilder: builder
        }.

        pushConstantsSize > 0 ifTrue: {
            builder addPushConstantsWithSize: pushConstantsSize
        }
    }.

    method addBank: (bank: ShaderSignatureBankDescription const ref) ::=> Void := {
        banks add: bank.
        banks last maxBindingPointCountHint = 0 ifTrue: {
            banks last maxBindingPointCountHint: 1024
        }
    }.
}.

}. ## End of namespace Core
}. ## End of namespace Graphics
}. ## End of namespace Std
