namespace Std definition: {
namespace Graphics definition: {
namespace Core definition: {

#**
 * I am a handle for a swap chain.
 *#
class SwapChain superclass: RenderingDriverObjectHandle; definition: {
    abstract method colorBufferFormat => PixelFormat.
    abstract method depthStencilFormat => PixelFormat.

    abstract method destroy => Void.

    abstract method getExtent => UInt32x2.
    abstract method getLayerCount => UInt32.

    abstract method swapBuffers => SwapChainPresentationError.
    abstract method getCurrentBackBuffer => FramebufferRef.
    abstract method getCurrentBackBufferForLayer: (layerIndex: UInt32) ::=> FramebufferRef.
    abstract method getCurrentBackBufferIndex => UInt32.
    abstract method getFramebufferCount => UInt32.
    abstract method setOverlayPosition: (position: Int32x2) ::=> Void.
}.

compileTime constant SwapChainRef := SwapChain rcRef.

}. ## End of namespace Core
}. ## End of namespace Graphics
}. ## End of namespace Std
