namespace Stdn definition: {
namespace Memory definition: {
namespace Tests definition: {

class FixedSizeBuddyBlockAllocatorTests superclass: Stdn Testing TestCase; definition: {
    compileTime constant BlockAllocator := NativeMemoryHeap ChunkBuddyMemoryAllocator.

    test: testEmpty with: {
        let allocator mutable type: BlockAllocator.
        self assert: allocator currentFreeLeafBlockCount equals: BlockAllocator LeafLevelBlockCount.
    }.

    test: testAllocateBlockSize1 with: {
        let allocator mutable type: BlockAllocator.
        self assert: (allocator allocateBlocks: 1 forSlab: false) equals: 0.
        self assert: (allocator allocateBlocks: 1 forSlab: false) equals: 1.
        self assert: (allocator allocateBlocks: 1 forSlab: false) equals: 2.
        self assert: (allocator allocateBlocks: 1 forSlab: false) equals: 3.
    }.

    test: testAllocateBlockSize2 with: {
        let allocator mutable type: BlockAllocator.
        self assert: (allocator allocateBlocks: 2 forSlab: false) equals: 0.
        self assert: (allocator allocateBlocks: 2 forSlab: false) equals: 2.
        self assert: (allocator allocateBlocks: 2 forSlab: false) equals: 4.
        self assert: (allocator allocateBlocks: 2 forSlab: false) equals: 6.
    }.

    test: testAllocateBlockSize2_4 with: {
        let allocator mutable type: BlockAllocator.
        self assert: (allocator allocateBlocks: 2 forSlab: false) equals: 0.
        self assert: (allocator allocateBlocks: 2 forSlab: false) equals: 2.
        self assert: (allocator allocateBlocks: 4 forSlab: false) equals: 4.
        self assert: (allocator allocateBlocks: 4 forSlab: false) equals: 8.

        allocator freeAtBlock: 2 ##; freeAtBlock: 0.
        ##self assert: (allocator allocateBlocks: 4 forSlab: false) equals: 0.
    }.

    test: testAllocateBlockSizeAll with: {
        let allocator mutable type: BlockAllocator.
        self assert: (allocator allocateBlocks: BlockAllocator LeafLevelBlockCount forSlab: false) equals: 0.
        self assert: allocator currentFreeLeafBlockCount equals: 0.
        self assert: (allocator allocateBlocks: 1 forSlab: false) equals: BlockAllocator InvalidAllocation.
        self assert: (allocator allocateBlocks: BlockAllocator LeafLevelBlockCount forSlab: false) equals: BlockAllocator InvalidAllocation.
    }.

    test: testAllocateMoreThanAvailable with: {
        let allocator mutable type: BlockAllocator.
        self assert: (allocator allocateBlocks: BlockAllocator LeafLevelBlockCount + 1 forSlab: false) equals: BlockAllocator InvalidAllocation.
    }.

}.

}. ## namespace Tests
}. ## namespace Memory
}. ## namespace Stdn
