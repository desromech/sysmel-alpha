namespace Stdn definition: {
namespace IO definition: {
namespace Tests definition: {

class TextStreamReaderTestCase superclass: Stdn Testing TestCase; definition: {
    test: testInteger with: {
        self assert: "0" asMutableString textStreamReader nextInt64 equals: 0.
        self assert: "42" asMutableString textStreamReader nextInt64 equals: 42.
        self assert: "-42" asMutableString textStreamReader nextInt64 equals: -42.
        self assert: "0xab" asMutableString textStreamReader nextInt64 equals: 16rab.
        self assert: "-0xab" asMutableString textStreamReader nextInt64 equals: 16rab negated.
    }.

    test: testFloat32 with: {
        self assert: "0" asMutableString textStreamReader nextFloat32 equals: 0.
        self assert: "42" asMutableString textStreamReader nextFloat32 equals: 42.
        self assert: "-42" asMutableString textStreamReader nextFloat32 equals: -42.
        self assert: "0xab" asMutableString textStreamReader nextFloat32 equals: 16rab.
        self assert: "-0xab" asMutableString textStreamReader nextFloat32 equals: 16rab negated.

        self assert: "0.5" asMutableString textStreamReader nextFloat32 equals: 0.5.
        self assert: "42.5" asMutableString textStreamReader nextFloat32 equals: 42.5.
        self assert: "-4.5" asMutableString textStreamReader nextFloat32 equals: -4.5.

        self assert: "inf" asMutableString textStreamReader nextFloat32 isPositiveInfinity.
        self assert: "-inf" asMutableString textStreamReader nextFloat32 isNegativeInfinity.

        self assert: "nan" asMutableString textStreamReader nextFloat32 isNaN.
    }.

    test: testFloat64 with: {
        self assert: "0" asMutableString textStreamReader nextFloat64 equals: 0.
        self assert: "42" asMutableString textStreamReader nextFloat64 equals: 42.
        self assert: "-42" asMutableString textStreamReader nextFloat64 equals: -42.
        self assert: "0xab" asMutableString textStreamReader nextFloat64 equals: 16rab.
        self assert: "-0xab" asMutableString textStreamReader nextFloat64 equals: 16rab negated.

        self assert: "0.5" asMutableString textStreamReader nextFloat64 equals: 0.5.
        self assert: "42.5" asMutableString textStreamReader nextFloat64 equals: 42.5.
        self assert: "-4.5" asMutableString textStreamReader nextFloat64 equals: -4.5.

        self assert: "inf" asMutableString textStreamReader nextFloat64 isPositiveInfinity.
        self assert: "-inf" asMutableString textStreamReader nextFloat64 isNegativeInfinity.

        self assert: "nan" asMutableString textStreamReader nextFloat64 isNaN.
    }.

    test: testNextToken with: {
        self assert: "0 hello\nworld 42" asMutableString textStreamReader nextToken equals: "0" asMutableString.
        self assert: ("0 hello\nworld 42" asMutableString textStreamReader nextToken; nextToken) equals: "hello" asMutableString.
        self assert: ("0 hello\nworld 42" asMutableString textStreamReader nextToken; nextToken; nextToken) equals: "world" asMutableString.
        self assert: ("0 hello\nworld 42" asMutableString textStreamReader nextToken; nextToken; nextToken; nextToken) equals: "42" asMutableString.
    }.

    test: testNextLine with: {
        self assert: "0 hello\nworld 42" asMutableString textStreamReader nextLine equals: "0 hello" asMutableString.
        self assert: ("0 hello\nworld 42" asMutableString textStreamReader nextLine; nextLine) equals: "world 42" asMutableString.
        self assert: ("0 hello\nworld 42" asMutableString textStreamReader nextLine; nextLine; nextLine) equals: "" asMutableString.
        self assert: ("0 hello\nworld 42" asMutableString textStreamReader nextLine; nextLine; peekChar8) < 0.
        self assert: ("0 hello\nworld 42" asMutableString textStreamReader nextLine; nextLine; atEnd).
        self assert: "0 hello\nworld 42" asMutableString textStreamReader lines size equals: 2.
    }.
}.

}. ## namespace Tests
}. ## namespace Collections
}. ## namespace Stdn
