namespace Smalltalk definition: {

gcclass SmallFloatTestCase superclass: TestCase; definition: {

    method testNegated := {
        self assert: 0.0 asProtoObject negated equals: 0.0.
        self assert: 1.0 asProtoObject negated equals: -1.0.
        self assert: 2.5 asProtoObject negated equals: -2.5.
        self assert: -1.0 asProtoObject negated equals: 1.0.
        self assert: -2.5 asProtoObject negated equals: 2.5.
    }.

    method testAddition := {
        self assert: 1.0 asProtoObject + 2.0 asProtoObject equals: 3.0.
    }.

    method testSubtraction := {
        self assert: 1.0 asProtoObject - 2.0 asProtoObject equals: -1.0.
    }.

    method testMultiplication := {
        self assert: 2.0 asProtoObject * 3.0 asProtoObject equals: 6.0.
        self assert: 6.0 asProtoObject * 0.0 asProtoObject equals: 0.0.
    }.

    method testDivision := {
        self assert: 6.0 asProtoObject / 2.0 asProtoObject equals: 3.0.
        self assert: (1.0 asProtoObject / 2.0 asProtoObject) equals: 0.5.
    }.

    method testIntegerDivision := {
        self assert: 6.0 asProtoObject // 2.0 asProtoObject equals: 3.
        self assert: 7.5 asProtoObject // 2.5 asProtoObject equals: 3.
        self assert: 1.0 asProtoObject // 2.0 asProtoObject equals: 0.
    }.

    method testSqrt := {
        self assert: 0.0 asProtoObject sqrt equals: 0.0.
        self assert: 1.0 asProtoObject sqrt equals: 1.0.
        self assert: 4.0 asProtoObject sqrt equals: 2.0.
        self assert: 9.0 asProtoObject sqrt equals: 3.0.
        self assert: 2.0 asProtoObject sqrt equals: 1.4142135623730951.
    }.

    method testLessThan := {
        self assert: 1.0 asProtoObject < 2.0 asProtoObject.
        self deny: 1.0 asProtoObject < 1.0 asProtoObject.
        self deny: 2.0 asProtoObject < 1.0 asProtoObject.
    }.

    method testLessOrEqual := {
        self assert: 1.0 asProtoObject <= 2.0 asProtoObject.
        self assert: 1.0 asProtoObject <= 1.0 asProtoObject.
        self deny: 2.0 asProtoObject < 1.0 asProtoObject.
    }.

    method testEqual := {
        self deny: 1.0 asProtoObject = 2.0 asProtoObject.
        self assert: 1.0 asProtoObject = 1.0 asProtoObject.
        self deny: 2.0 asProtoObject = 1.0 asProtoObject.
    }.

    method testThreeWayComparison := {
        self assert: (1.0 asProtoObject <=> 2.0 asProtoObject) < 0.0.
        self assert: (1.0 asProtoObject <=> 1.0 asProtoObject) equals: 0.0.
        self assert: (2.0 asProtoObject <=> 1.0 asProtoObject) > 0.0.
    }.

    method testNotEqual := {
        self assert: 1.0 asProtoObject ~= 2.0 asProtoObject.
        self deny: 1.0 asProtoObject ~= 1.0 asProtoObject.
        self assert: 2.0 asProtoObject ~= 1.0 asProtoObject.
    }.

    method testGreater := {
        self deny: 1.0 asProtoObject > 2.0 asProtoObject.
        self deny: 1.0 asProtoObject > 1.0 asProtoObject.
        self assert: 2.0 asProtoObject > 1.0 asProtoObject.
    }.

    method testGreaterOrEqual := {
        self deny: 1.0 asProtoObject >= 2.0 asProtoObject.
        self assert: 1.0 asProtoObject >= 1.0 asProtoObject.
        self assert: 2.0 asProtoObject >= 1.0 asProtoObject.
    }.

}.

}. ## namespace Smalltalk
