namespace Std definition: {
namespace Graphics definition: {
namespace DriverAGPU definition: {

useNamespace: Std Graphics Core.

#**
 * I am a agpu based shader signature builder.
 *#
sealed class AgpuSwapChain superclass: SwapChain; definition: {
    public field handle type: AGPU SwapChainRef.
    public field creationInfo type: SwapChainCreationInfo.

    override method colorBufferFormat => PixelFormat
        := creationInfo colorBufferFormat.

    override method depthStencilFormat => PixelFormat
        := creationInfo depthStencilFormat.

    override method getExtent => UInt32x2
        := UInt32x2(handle _ getWidth, handle _ getHeight).

    override method getLayerCount => UInt32
        := handle _ getLayerCount.

    override method destroy => Void := {
        handle reset
    }.

    override method swapBuffers => SwapChainPresentationError := {
        let errorCode := handle _ swapBuffers selectCase: #{
        AGPU Error Ok : SwapChainPresentationError Ok.
        AGPU Error Suboptimal : SwapChainPresentationError Suboptimal.
        AGPU Error OutOfDate : SwapChainPresentationError OutOfDate.
        _ : SwapChainPresentationError Error.
        }
    }.

    override method getCurrentBackBufferForLayer: (layerIndex: UInt32) ::=> FramebufferPtr := {
        let backBufferHandle := handle _ getCurrentBackBufferForLayer: layerIndex.
        backBufferHandle ifNil: {
            return: FramebufferPtr nil
        }.

        let result := AgpuFramebuffer rcNew.
        result _ handle: backBufferHandle.
        result upCastFor: Framebuffer
    }.

    override method getCurrentBackBuffer => FramebufferPtr
        := self getCurrentBackBufferForLayer: 0.

    override method getCurrentBackBufferIndex => UInt32
        := handle _ getCurrentBackBufferIndex.

    override method getFramebufferCount => UInt32
        := handle _ getFramebufferCount.

    override method setOverlayPosition: (position: Int32x2) ::=> Void := {
        handle _ setOverlayPosition: position x y: position y
    }.
}.

compileTime constant AgpuSwapChainPtr := AgpuSwapChain rcPointer.

}. ## End of namespace Core
}. ## End of namespace Graphics
}. ## End of namespace Std
