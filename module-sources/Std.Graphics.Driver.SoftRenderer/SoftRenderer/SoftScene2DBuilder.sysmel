namespace Std definition: {
namespace Graphics definition: {
namespace Driver definition: {
namespace SoftRenderer definition: {

useNamespace: Std Graphics Core.

#**
 * I am a handle for a sampler.
 *#
class SoftScene2DBuilder superclass: Scene2D Builder; definition: {
    override method createTextureHandleFor: (texture: Std RCObjectPtr const ref) view: (textureView: Std RCObjectPtr const ref) ::=> StrongTextureHandleRef := {
        SoftScene2DDeviceTextureHandle new
            texture: (texture downCastFor: Texture);
            textureView: (textureView downCastFor: TextureView);
            upCastFor: StrongTextureHandle
    }.

    override method createTextureFromForm: (form: FormRef const ref) ::=> StrongTextureHandleRef := {
        SoftScene2DDeviceTextureHandle new
            textureView: ((SoftFormTextureView for: form) downCastFor: TextureView);
            upCastFor: StrongTextureHandle
    }.
}.

compileTime constant SoftScene2DBuilderPtr := SoftScene2DBuilder rcPointer.

}. ## End of namespace SoftRenderer
}. ## End of namespace Driver
}. ## End of namespace Graphics
}. ## End of namespace Std
