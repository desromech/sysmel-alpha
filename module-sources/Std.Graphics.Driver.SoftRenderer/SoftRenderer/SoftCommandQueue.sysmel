namespace Std definition: {
namespace Graphics definition: {
namespace Driver definition: {
namespace SoftRenderer definition: {

useNamespace: Std Graphics Core.

#**
 * I am a CPU only implementation for a graphics based command queue.
 *#
class SoftCommandQueue superclass: CommandQueue; definition: {
    private field queueMutex type: Std Mutex.

    override method initialize => Void := {

    }.

    override method finalize => Void := {

    }.

    override method submitCommandList: (commandList: CommandListRef const ref) ::=> Void := {
        commandList ifNil: {return: void}.

        let softCommandList := commandList asRenderingDeviceCommandList castTo: SoftCommandList pointer.
        queueMutex withLock: {
            softCommandList _ executeAllCommands
        }.
    }.

    override method waitForIdle ::=> Void := {
    }.

    override method signalFence: (fence: FenceRef const ref) ::=> Void := {

    }.

    override method waitFence: (fence: FenceRef const ref) ::=> Void := {

    }.
}.

}. ## End of namespace SoftRenderer
}. ## End of namespace Driver
}. ## End of namespace Graphics
}. ## End of namespace Std
