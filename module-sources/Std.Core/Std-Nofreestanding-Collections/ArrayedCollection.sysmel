namespace Std definition: {
namespace Collections definition: {

macro method ArrayedCollectionMixin := ``{
    Std Collections SequenceableCollectionMixin.
    Std Collections ArrayedCollectionMacrosMixin.

    Std Concepts Equalable ifType: ValueType complies: {
        const method splitOn: (splitter: ValueType const ref) do: (aBlock: ((ValueType const arraySlice) => Void) nativeStackBlockClosure) ::=> Void := {
            let startIndex mutable type: UIntPointer.
            self doWithIndex: {:each :index :: Void |
                each = splitter ifTrue: {
                    aBlock(self from: startIndex until: index).
                    startIndex := index + 1
                }.
            }.

            ## The last element.
            startIndex < self size ifTrue: {
                aBlock(self from: startIndex until: self size).
            }
        }.

        const method splitOn: (splitter: ValueType const ref) doWithIndex: (aBlock: ((ValueType const arraySlice -- UIntPointer) => Void) nativeStackBlockClosure) ::=> Void := {
            let partIndex mutable type: UIntPointer := 0.
            self splitOn: splitter do: {:part :: Void |
                aBlock(part, partIndex).
                partIndex := partIndex + 1
            }
        }.
    }.
}.

}. ## End of namespace Collections
}. ## End of namespace Std
