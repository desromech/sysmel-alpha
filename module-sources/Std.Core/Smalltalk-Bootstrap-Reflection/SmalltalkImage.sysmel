namespace Smalltalk definition: {

gcclass SmalltalkImage superclass: Object; definition: {
    meta definition: {
        field uniqueInstance.

        method uniqueInstance
            := uniqueInstance ifNil: {uniqueInstance := self new}.

        method initialize := {
            self uniqueInstance.
            self
        }.
    }.

    field vm.
    field globals.

    method initialize := {
        super initialize.
        vm := VirtualMachine new.
        globals := SystemEnvironment for: (NamespaceInformation globalNamespace getOrCreateSharedNamespaceNamed: #Smalltalk).
        self
    }.

    method vm
        := vm.

    method globals
        := globals.

    method wordSize
        := UIntPointer instanceSize.

    method specialSelectors
        := #(#+ 1 #- 1 #< 1 #> 1 #<= 1 #>= 1 #= 1 #~= 1
            #"*" 1 #/ 1 #\\ 1 #@ 1 #bitShift: 1 #// 1 #bitAnd: 1 #bitOr: 1
			#at: 1 #at:put: 2 #size 0 #next 0 #nextPut: 1 #atEnd 0 #== 1 #class 0
			#"~~" 1 #value 0 #value: 1 #do: 1 #new 0 #new: 1 #x 0 #y 0 ).

    method specialSelectorSize
        := self specialSelectors basicSize // 2.

    method specialSelectorAt: index
        := self specialSelectors at: index * 2 - 1.

    method specialNargsAt: index
        := self specialSelectors at: index * 2.

    method specialSelectorIndexOrNil: selector := {
        let specialSelectors := self specialSelectors.
        1 to: specialSelectors basicSize // 2 do: {:i :: Void |
            (specialSelectors at: i*2 - 1) == selector ifTrue: {
                return: i
            }
        }.

        nil
    }.
}.

global Smalltalk mutable type: ProtoObject.

}. ## End of namespace Smalltalk
