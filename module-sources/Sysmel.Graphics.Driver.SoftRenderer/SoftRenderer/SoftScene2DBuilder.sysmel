namespace Stdn definition: {
namespace Graphics definition: {
namespace Driver definition: {
namespace SoftRenderer definition: {

useNamespace: Stdn Graphics Core.

#**
 * I am a handle for a sampler.
 *#
class SoftScene2DBuilder superclass: Scene2D Builder; definition: {
    override method createTextureHandleFor: (texture: SharedObjectPtr const ref) view: (textureView: SharedObjectPtr const ref) ::=> StrongTextureHandlePtr := {
        let result := SoftScene2DDeviceTextureHandle sharedNew.
        result _
            texture: (texture downCastFor: Texture);
            textureView: (textureView downCastFor: TextureView).

        result upCastFor: StrongTextureHandle
    }.

    override method createTextureFromForm: (form: FormPtr const ref) ::=> StrongTextureHandlePtr := {
        let result := SoftScene2DDeviceTextureHandle sharedNew.
        result _
            textureView: ((SoftFormTextureView for: form) downCastFor: TextureView).

        result upCastFor: StrongTextureHandle
    }.
}.

compileTime constant SoftScene2DBuilderPtr := SoftScene2DBuilder sharedPointer.

}. ## End of namespace SoftRenderer
}. ## End of namespace Driver
}. ## End of namespace Graphics
}. ## End of namespace Stdn
