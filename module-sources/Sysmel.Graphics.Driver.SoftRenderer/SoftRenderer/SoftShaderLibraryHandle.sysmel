namespace Std definition: {
namespace Graphics definition: {
namespace Driver definition: {
namespace SoftRenderer definition: {

useNamespace: Std Graphics Core.

#**
 * I am a CPU only implementation for a shader library handle.
 *#
class SoftShaderLibraryHandle superclass: ShaderLibraryHandle; definition: {
    public field moduleInfo type: GPU ShaderModuleInfo const pointer.

    override method createHandleForEntryPoint: (entryPointInfo: GPU ShaderEntryPointInfo const ref) ::=> ShaderStageHandlePtr := {
        entryPointInfo moduleInfo ~~ moduleInfo ifTrue: {
            return: ShaderStageHandlePtr nil
        }.

        let result := SoftShaderStageHandle rcNew.
        result _ entryPointInfo: entryPointInfo.
        result upCastFor: ShaderStageHandle
    }.
}.

compileTime constant SoftShaderLibraryHandlePtr := SoftShaderLibraryHandle rcPointer.

}. ## End of namespace SoftRenderer
}. ## End of namespace Driver
}. ## End of namespace Graphics
}. ## End of namespace Std
