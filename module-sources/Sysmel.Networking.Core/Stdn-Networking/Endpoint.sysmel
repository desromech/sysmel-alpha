namespace Stdn definition: {
namespace IO definition: {

enum EndpointType valueType: UInt8; values: #{
    Invalid: 0.
    Local: 1.
    IPv4: 2.
    IPv6: 3.
}.

union EndpointAddressIPv4 definition: {
    public field addr type: UInt32.
    public field bytes type: (UInt8 array: 4).

    const method printOnNativeTextStreamWriter: (writer: TextStreamWriter ref) ::=> Void := {
        writer << bytes[0] << '.' << bytes[1] << '.' << bytes[2] << '.' << bytes[3]
    }.
}.

union EndpointAddressIPv6 definition: {
    public field addr type: (UInt8 array: 16).
    public field shorts type: (UInt16 array: 8).

    const method printOnNativeTextStreamWriter: (writer: TextStreamWriter ref) ::=> Void := {
    }
}.

union EndpointAddress definition: {
    public field ipv4 type: EndpointAddressIPv4.
    public field ipv6 type: EndpointAddressIPv6.
}.

compileTime if: Compiler compilationTarget isLittleEndian then: {
    function hostToNetworkShort(value: UInt16) => UInt16
        := swapUInt16(value).
    function hostToNetworkLong(value: UInt32) => UInt32
        := swapUInt32(value).
    function networkToHostShort(value: UInt16) => UInt16
        := swapUInt16(value).
    function networkToHostLong(value: UInt32) => UInt32
        := swapUInt32(value).
} else: {
    function hostToNetworkShort(value: UInt16) => UInt16
        := value.
    function hostToNetworkLong(value: UInt32) => UInt32
        := value.
    function networkToHostShort(value: UInt16) => UInt16
        := value.
    function networkToHostLong(value: UInt32) => UInt32
        := value.
}.

struct Endpoint definition: {
    public field type type: EndpointType.
    public field port type: UInt16.
    public field addr type: EndpointAddress.

    meta method invalid ::=> SelfType
        := self basicNewValue.

    meta method ipv4SourcePort: (port: UInt16) ::=> SelfType
        := self basicNewValue
            type: EndpointType IPv4;
            port: hostToNetworkShort(port);
            yourself.

    meta method ipv6SourcePort: (port: UInt16) ::=> SelfType
        := self basicNewValue
            type: EndpointType IPv4;
            port: hostToNetworkShort(port);
            yourself.

    const method isInvalid => Boolean8
        := type == EndpointType Invalid.

    const method printOnNativeTextStreamWriter: (writer: TextStreamWriter ref) ::=> Void := {
        type selectCase: #{
        EndpointType IPv4 : {
            writer << addr ipv4 << ':' << networkToHostShort(port)
        }.
        EndpointType IPv6 : {
            writer << addr ipv6 << ':' << networkToHostShort(port)
        }.
        }.
    }.
}.

}. ## End of namespace IO
}. ## End of namespace Stdn
