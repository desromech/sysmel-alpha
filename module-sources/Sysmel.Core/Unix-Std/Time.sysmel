namespace Std definition: {
namespace Chrono definition: {
    function microsecondClockValue() => Time := {
        let tv mutable type: Unix timeval.
        Unix gettimeofday(tv address, nil).

        (tv tv_sec castTo: Int64)*1000000 + tv tv_usec
    }.

    function monotonicClockValue() => Time := {
        let ts mutable type: Unix timespec.
        Unix clock_gettime(Unix CLOCK_MONOTONIC, ts address).

        (ts tv_sec castTo: Int64)*1000000 + ts tv_nsec/1000
    }.

    function processClockValue() => Time := {
        let ts mutable type: Unix timespec.
        Unix clock_gettime(Unix CLOCK_PROCESS_CPUTIME_ID, ts address).

        (ts tv_sec castTo: Int64)*1000000 + ts tv_nsec/1000
    }.

    function threadClockValue() => Time := {
        let ts mutable type: Unix timespec.
        Unix clock_gettime(Unix CLOCK_THREAD_CPUTIME_ID, ts address).

        (ts tv_sec castTo: Int64)*1000000 + ts tv_nsec/1000
    }.

    inline function sleepFor(time: Time) => Void := {
        time > 0 ifTrue: {
            Unix usleep(time castTo: Unix USeconds_T)
        }.
    }.

    inline function sleepUntil(time: Time) => Void
        := sleepFor(time - now()).
}.
}.
