namespace Stdn definition: {
namespace Chrono definition: {
    compileTime constant Time := Int64.
    compileTime constant TicksPerMicrosecond := 1.
    compileTime constant TicksPerMillisecond := TicksPerMicrosecond*1000.
    compileTime constant TicksPerSecond := TicksPerMillisecond*1000.

    function microsecondClockValue() => Time := {
        let tv mutable type: Unix timeval.
        Unix gettimeofday(tv address, nil).

        (tv tv_sec castTo: Int64)*1000000 + tv tv_usec
    }.

    inline function now() => Time
        := microsecondClockValue().

    inline function microseconds(time: Time) => Time
        := time * TicksPerMicrosecond.

    inline function milliseconds(time: Time) => Time
        := time * TicksPerMillisecond.

    inline function seconds(time: Time) => Time
        := time * TicksPerSecond.

    inline function sleepFor(time: Time) => Void := {
        time > 0 ifTrue: {
            Unix usleep(time castTo: Unix USeconds_T)
        }.
    }.

    inline function ticksToFloatSeconds(ticks: Time) => Float64
        := (ticks castTo: Float64) / TicksPerSecond.

    inline function sleepUntil(time: Time) => Void
        := sleepFor(time - now()).
}.
}.
