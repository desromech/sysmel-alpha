namespace Smalltalk definition: {

HashedCollection definition: {
    meta extend: {
        method new
            := self basicNew initialize: 5; yourself.

        method new: initialCapacity
            := self basicNew initialize: (initialCapacity castTo: UIntPointer); yourself.

        method newFrom: aCollection
            := self subclassResponsibility.
    }.

    method initialize: (initialCapacity: UIntPointer) := {
        array := Array new: (initialCapacity max: 5)
    }.

    method capacity => UIntPointer
        := array __private __data size.

    method size => UIntPointer
        := tally.

    inline method findElementIndex: key ::=> UIntPointer := {
        let index := self scanFor: key.
        index > 0 ifTrue: {
            return: (index castTo: UIntPointer)
        }.

        ## This case should never happen with a normal HashedCollection.
        self errorNoFreeSpace.
        0u
    }.

    method scanFor: key ::=> UIntPointer := {
        self subclassResponsibility.
        return: 0
    }.

    inline method atNewIndex: (newIndex: UIntPointer) put: newSetElement := {
        array at: newIndex put: newSetElement.
        tally := tally + 1.
        self fullCheck.
    }.

    method fullCheck := {
        let currentCapacity := array __private __data size.
        let currentSize := tally.
        let remainingCapacity := currentCapacity - currentSize.
        let growThreshold := remainingCapacity // 4 max: 1.
        remainingCapacity < growThreshold ifTrue: {
            self grow
        }
    }.

    method grow := {
        let oldElements := array.
        let oldCapacity := oldElements __private __data size.
        tally := 0.
        array := Array new: (oldCapacity * 2 max: 5).
        0 until: oldCapacity do: {:i :: Void |
            let element := oldElements[i].
            element ifNotNil: {
                self noCheckAdd: element
            }.
        }.

        self.
    }.

    method noCheckAdd: element := {
        array at: (self scanFor: element) put: element.
        tally := tally + 1
    }.

    method errorNoFreeSpace
        := self error: "There is no free space in this collection!".
}.

}. ## End of namespace Smalltalk
