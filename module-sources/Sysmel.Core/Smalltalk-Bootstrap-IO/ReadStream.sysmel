namespace Smalltalk definition: {
gcclass ReadStream superclass: PositionableStream; definition: {

    method size
        := readLimit.

    method on: aCollection from: firstIndex to: lastIndex := {
        collection := aCollection.
        readLimit := (collection size castTo: UIntPointer) min: (lastIndex castTo: UIntPointer).
        position := ((firstIndex castTo: UIntPointer) max: 1u) - 1u.
        self
    }.

    method next := {
        position >= readLimit
            ifTrue: {nil}
            ifFalse: {collection at: (position := position + 1)}.
    }.

    method next: elementsToRead := {
        let endPosition := position + (elementsToRead castTo: UIntPointer) min: readLimit.
        let result := collection copyFrom: position + 1 to: endPosition.
        position := endPosition.
        result
    }.

    method nextPut: anObject
        := self shouldNotImplement.

    method readStream
        := self.

}.
} ## End of namespace Smalltalk
