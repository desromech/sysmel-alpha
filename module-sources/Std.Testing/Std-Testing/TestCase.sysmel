namespace Std definition: {
namespace Testing definition: {

#**
 * I am a class that is used for writing tests for native code
 *#
class TestCase superclass: TestAsserter; definition: {
    SelfType setMethodDictionaryRequired.

    meta macro method test: testIdentifier with: body := ``(
        method `,(testIdentifier asLiteralSymbolNodeFor: Compiler compilationTarget) => Void
            := `,body
    ).

    override method initialize => Void := {
        self setUp.
    }.

    override method finalize => Void := {
        self tearDown.
    }.

    method skip => Void := {
        let exception mutable type: TestSkipException.
        exception signal
    }.

    #**
     * This is the place for setting up resources specific for a test case. This method is automatically called by the initializer.
     *#
    virtual method setUp => Void := {
    }.

    #**
     * This is the place for setting up resources specific for a test case. This method is automatically called by the finalizer.
     *#
    virtual method tearDown => Void := {
    }.

}.


} ## End of namespace Testing
} ## End of namespace Std
