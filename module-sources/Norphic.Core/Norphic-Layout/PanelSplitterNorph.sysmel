namespace Norphic definition: {

useNamespace: Std Graphics Core.
useNamespace: Std Graphics GUI.
useNamespace: Std Math Geometry.

class PanelSplitterNorph superclass: Norph; definition: {
    public field splitterIndex type: UIntPointer.
    field isDragging type: Boolean8.

    override method minimalExtent => Float32x2
        := 5.0f.

    override method defaultColor => Float32x4
        := self theme _ panelSplitterBackground.

    method directionColor => Float32x4
        := self theme _ panelSplitterDirectionColor.

    override method onMouseEnterEvent: (event: NorphMouseEnterEvent ref) ::=> Void := {
        super onMouseEnterEvent: event.
        self changed.
    }.

    override method onMouseLeaveEvent: (event: NorphMouseLeaveEvent ref) ::=> Void := {
        super onMouseLeaveEvent: event.
        self changed.
    }.

    override method onMouseButtonPressedEvent: (event: NorphMouseButtonPressedEvent ref) ::=> Void := {
        super onMouseButtonPressedEvent: event.

        event isLeftButton ifFalse: {
            return: void.
        }.

        isDragging := true.
        self changed.
        event wasHandled: true.
        self grabMouseCapture.
    }.

    override method onMouseButtonReleasedEvent: (event: NorphMouseButtonReleasedEvent ref) ::=> Void := {
        super onMouseButtonReleasedEvent: event.

        event isLeftButton ifFalse: {
            return: void.
        }.

        isDragging := false.
        self changed.
        event wasHandled: true.
        self releaseMouseCapture.
    }.

    override method onMouseMoveEvent: (event: NorphMouseMoveEvent ref) ::=> Void := {
        isDragging ifTrue: {
            (self owner downCastFor: PanedNorph) _
                onSplitter: splitterIndex dragDelta: event delta
        }.
    }.

    virtual method currentColor => Float32x4 := {
        self hasMouseFocus ifTrue: {
            self color lighter lighter
        } ifFalse: {
            self color
        }
    }.

    override method buildSceneGraphWith: (builder: NorphSceneBuilderRef const ref) ::=> NorphSceneNodeRef := {
        let backgroundRect := self localBounds.
        let directionLineRect := RectangleF32 min: backgroundRect min + 2.0 max: backgroundRect max - 2.0.
        (builder fillRectangle: backgroundRect color: self currentColor)
        -- (builder fillRectangle: directionLineRect color: self directionColor).
    }
}.

compileTime constant PanelSplitterNorphPtr := PanelSplitterNorph rcPointer.

}. ## End of namespace Norphic
