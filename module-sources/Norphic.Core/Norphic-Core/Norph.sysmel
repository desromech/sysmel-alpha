namespace Norphic definition: {

useNamespace: Stdn Graphics Core.
useNamespace: Stdn Math Geometry.

#**
 * I am a norph, my name comes from Native (M)orph in honor to the old
 * Smalltalk morph.
 *#
class Norph superclass: Stdn Object; definition: {
    protected field bounds type: RectangleF32.
    protected field color type: Float32x4.

    ##public field owner type: Norph weakPointer.
    public field subnorphs type: Stdn Collections Vector(Norph sharedPointer).

    inline method extent => Float32x2
        := bounds extent.

    inline method localBounds => RectangleF32
        := RectangleF32 min: Float32x2 zeros extent: self extent.

    override method initialize => Void := {

    }.

    override method finalize => Void := {
        self destroy
    }.

    virtual method bounds => RectangleF32
        := bounds.

    virtual method bounds: (theNewBounds: RectangleF32 const ref) ::=> Void := {
        bounds := theNewBounds.
        self boundsChanged.
    }.

    virtual method color => Float32x4
        := color.

    virtual method color: (theNewColor: Float32x4 const ref) ::=> Void := {
        color := theNewColor.
        self changed.
    }.

    virtual method renderOn: (canvas: Canvas ref) ::=> Void := {
        canvas
            color: color;
            fillRectangle: self localBounds
    }.

    virtual method renderSubnorphsOn: (canvas: Canvas ref) ::=> Void := {
        subnorphs do: {:(Norph sharedPointer const ref)child :: Void |
            child _ fullRenderOn: canvas
        }
    }.

    virtual method fullRenderOn: (canvas: Canvas ref) ::=> Void := {
        canvas transform restoreAfter: {
            canvas transform translateBy: bounds min.
            self
                renderOn: canvas;
                renderSubnorphsOn: canvas.
        }
    }.

    virtual method changed ::=> Void := {

    }.

    virtual method boundsChanged ::=> Void := {
        self changed
    }.

    virtual method destroy ::=> Void := {

    }.

    virtual method addSubnorph: (newSubnorph: Norph sharedPointer const ref) ::=> Void := {
        subnorphs add: newSubnorph
    }.
}.

}. ## End of namespace Norphic
