namespace Stdn definition: {
namespace Graphics definition: {
namespace DriverAGPU definition: {

useNamespace: Stdn Graphics Core.

#**
 * I am a agpu based device.
 *#
class AgpuVertexLayout superclass: VertexLayout; definition: {
    public field handle type: AGPU VertexLayoutRef.

    override method addVertexBuffers: (strides: UInt32 const arraySlice) withAttributes: (attributes: VertexAttributeDescription const arraySlice) ::=> Void := {
        let convertedAttributes mutable type: Stdn Collections Vector(AGPU VertexAttribDescription).
        convertedAttributes reserve: attributes size.
        attributes do: {:each :: Void |
            convertedAttributes add: (AGPU VertexAttribDescription()
            	buffer: each bufferIndex;
            	binding: each location;
            	format: (each format castTo: AGPU TextureFormat);
            	offset: each offset;
            	divisor: each divisor;
                yourself)
        }.

        handle _ addVertexAttributeBindings: (strides size castTo: UInt32) vertexStrides: (strides elements reinterpretCastTo: UInt32 pointer)
            attributeCount: (convertedAttributes size castTo: UInt32) attributes: convertedAttributes data.
    }.
}.

compileTime constant AgpuVertexLayoutPtr := AgpuVertexLayout sharedPointer.

}. ## End of namespace Core
}. ## End of namespace Graphics
}. ## End of namespace Stdn
