namespace Stdn definition: {
namespace Graphics definition: {
namespace DriverAGPU definition: {

useNamespace: Stdn Graphics Core.

#**
 * I am a agpu based shader signature builder.
 *#
sealed class AgpuShaderResourceBindings superclass: ShaderResourceBindings; definition: {
    public field handle type: AGPU ShaderResourceBindingRef.

    override method bindOn: (location: IntPointer) uniformBuffer: (buffer: BufferPtr const ref) ::=> Void := {
        let agpuBuffer := buffer getPointer castTo: AgpuBuffer pointer.
        agpuBuffer ifNotNil: {
            handle _ bindUniformBuffer: (location castTo: Int32) uniformBuffer: agpuBuffer _ handle.
        }.
    }.

    override method bindOn: (location: IntPointer) uniformBuffer: (buffer: BufferPtr const ref) offset: (offset: UIntPointer) size: (size: UIntPointer) ::=> Void := {
        let agpuBuffer := buffer getPointer castTo: AgpuBuffer pointer.
        agpuBuffer ifNotNil: {
            handle _ bindUniformBufferRange: (location castTo: Int32) uniformBuffer: agpuBuffer _ handle offset: (offset castTo: UInt32) size: (size castTo: UInt32).
        }.
    }.

    override method bindOn: (location: IntPointer) storageBuffer: (buffer: BufferPtr const ref) ::=> Void := {
        let agpuBuffer := buffer getPointer castTo: AgpuBuffer pointer.
        agpuBuffer ifNotNil: {
            handle _ bindStorageBuffer: (location castTo: Int32) storageBuffer: agpuBuffer _ handle.
        }.
    }.

    override method bindOn: (location: IntPointer) storageBuffer: (buffer: BufferPtr const ref) offset: (offset: UIntPointer) size: (size: UIntPointer) ::=> Void := {
        let agpuBuffer := buffer getPointer castTo: AgpuBuffer pointer.
        agpuBuffer ifNotNil: {
            handle _ bindStorageBufferRange: (location castTo: Int32) storageBuffer: agpuBuffer _ handle offset: (offset castTo: UInt32) size: (size castTo: UInt32).
        }.
    }.

    override method bindOn: (location: IntPointer) sampledTextureView: (textureView: TextureViewPtr const ref) ::=> Void := {
        let agpuTextureView := textureView getPointer castTo: AgpuTextureView pointer.
        agpuTextureView ifNotNil: {
            handle _ bindSampledTextureView: (location castTo: Int32) view: agpuTextureView _ handle
        }.
    }.

    override method bindOn: (location: IntPointer) storageImageView: (textureView: TextureViewPtr const ref) ::=> Void := {
        let agpuTextureView := textureView getPointer castTo: AgpuTextureView pointer.
        agpuTextureView ifNotNil: {
            handle _ bindStorageImageView: (location castTo: Int32) view: agpuTextureView _ handle
        }.
    }.

    override method bindOn: (location: IntPointer) sampler: (sampler: SamplerPtr const ref) ::=> Void := {
        let agpuSampler := sampler getPointer castTo: AgpuSampler pointer.
        agpuSampler ifNotNil: {
            handle _ bindSampler: (location castTo: Int32) sampler: agpuSampler _ handle
        }.
    }.
}.

compileTime constant AgpuShaderResourceBindingsPtr := AgpuShaderResourceBindings sharedPointer.

}. ## End of namespace Core
}. ## End of namespace Graphics
}. ## End of namespace Stdn
