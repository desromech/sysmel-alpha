namespace Smalltalk definition: {

gcclass TestAsserter definition: {

    method skip
        := TestSkip signal.

    method should: aBlock raise: anException := {
        let caught mutable := false.
        try: {
            aBlock value
        } catch: anException doing: {:e :: Void |
            caught := true
        }.

        caught ifFalse: {
            AssertionFailure signal
        }.

        self.
    }.

    method shouldnt: aBlock raise: anException := {
        let caught mutable := false.
        try: {
            aBlock value
        } catch: anException doing: {:e :: Void |
            caught := true
        }.

        caught ifTrue: {
            AssertionFailure signal
        }.

        self.
    }.

    method assert: condition := {
        condition ifFalse: {
            AssertionFailure signal.
        }.

        self
    }.

    method assert: condition description: description := {
        condition ifFalse: {
            AssertionFailure signal.
        }.

        self
    }.

    method deny: condition := {
        condition ifTrue: {
            AssertionFailure signal: "Unexpected condition.".
        }.

        self
    }.

    method assert: actual identicalTo: expected := {
        actual == expected ifFalse: {
            AssertionFailure signal: (actual asString -- " is not identical to the expected value: " -- expected asString).
        }.

        self
    }.

    method assert: actual equals: expected := {
        actual = expected ifFalse: {
            AssertionFailure signal: (actual asString -- " is not equal to the expected value: " -- expected asString).
        }.

        self
    }.

    method deny: actual equals: expected := {
        actual = expected ifTrue: {
            AssertionFailure signal: (actual asString -- " should not equal to the expected value: " -- expected asString).
        }.

        self
    }.

}.

}. ## End of namespace Smalltalk
