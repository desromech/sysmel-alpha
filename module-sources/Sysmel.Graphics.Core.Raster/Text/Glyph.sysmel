namespace Std definition: {
namespace Graphics definition: {
namespace Core definition: {

useNamespace: Std Math Geometry.

#**
 * I am an abstract glyph representation. I hold standard metrics for drawing a
 * particular glyph, but my subclasses define how I am actually being used for drawing.
 *#
class Glyph superclass: RCObject; definition: {
    public field drawOrigin type: Float32x2. ## The bitmap rendering origin.

    public field extent type: Float32x2.

    public field horizontalBearing type: Float32x2.
    public field horizontalAdvance type: Float32x2.

    public field verticalBearing type: Float32x2.
    public field verticalAdvance type: Float32x2.

    virtual method asForm => Form rcPointer
        := Form rcPointer nil.

    virtual method isRenderingDeviceSpecificGlyph => Boolean8
        := false.

    inline method bounds => RectangleF32
        := RectangleF32 min: drawOrigin extent: extent.

    virtual method textureAtlasBounds => RectangleF32
        := RectangleF32 min: 0 extent: extent.

}.

compileTime constant GlyphPtr := Glyph rcPointer.

}. ## End of namespace Core
}. ## End of namespace Graphics
}. ## End of namespace Std
