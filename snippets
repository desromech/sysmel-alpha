semanticModule := MbndStandaloneModule llvm_x86_64
	loadRuntimeCoreLibrary;
	"evaluateFileNamedOnce: 'lib/bindings/sdl2/sdl2.sysmel';"
	evaluateFileNamedOnce: 'samples/cpu/chello.sysmel';
	finishSemanticAnalysis;
	yourself.
	
ssaModule := semanticModule generateTargetCodeModule.
ssaModule asLowLevelModule writeTextToFileNamed: 'test.ll'

===============================================================================
MbndStandaloneModule llvm_x86_64
	withDebugInformation;
	loadRuntimeCoreLibrary;
	evaluateFileNamedOnce: 'samples/cpu/hello.sysmel';
	finishSemanticAnalysis;
	writeAssemblyToFileNamed: 'hello.ll'

===============================================================================
MbndStandaloneModule llvm_x86_64
	withDebugInformation;
	loadRuntimeCoreLibrary;
	evaluateFileNamedOnce: 'lib/bindings/sdl2/sdl2.sysmel';
	evaluateFileNamedOnce: 'samples/cpu/helloSDL2.sysmel';
	finishSemanticAnalysis;
	writeAssemblyToFileNamed: 'helloSDL2.ll'
===============================================================================
MbndStandaloneModule spirv_vulkan
	loadRuntimeCoreLibrary;
	evaluateFileNamedOnce: 'samples/gpu/solidRenderingShaders.sysmel';
	finishSemanticAnalysis;
	writeExecutableToFileNamed: 'test.spv'

===============================================================================
MbndStandaloneModule spirv_vulkan
	loadRuntimeCoreLibrary;
	evaluateFileNamedOnce: 'lib/gpu/blocks/blocks.sysmel';
	evaluateLanguage: #sysmel source: '
function mapFunction(x: Float32) => Float32
	:= x + 2.

GPUBlockConversion CollectionMapShader(mapFunction) main
';
	finishSemanticAnalysis;
	writeExecutableToFileNamed: 'test.spv'

===============================================================================
SGPUCompilationEnvironment reset.

gpuBlock := [ :x | x + 10 * 2 ] gpuType: #(Float32 => Float32).
gpuBlock asCollectionMapShaderStageCode.

