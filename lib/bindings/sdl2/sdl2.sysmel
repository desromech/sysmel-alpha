loadFileOnce: "keysym.sysmel".

namespace SDL2 definition: {

    ## SDL.h
    compileTimeConstant SDL_INIT_TIMER          := 16r00000001.
    compileTimeConstant SDL_INIT_AUDIO          := 16r00000010.
    compileTimeConstant SDL_INIT_VIDEO          := 16r00000020.
    compileTimeConstant SDL_INIT_JOYSTICK       := 16r00000200.
    compileTimeConstant SDL_INIT_HAPTIC         := 16r00001000.
    compileTimeConstant SDL_INIT_GAMECONTROLLER := 16r00002000.
    compileTimeConstant SDL_INIT_EVENTS         := 16r00004000.
    compileTimeConstant SDL_INIT_NOPARACHUTE    := 16r00100000.

    compileTimeConstant SDL_INIT_EVERYTHING :=
                SDL_INIT_TIMER | SDL_INIT_AUDIO | SDL_INIT_VIDEO | SDL_INIT_EVENTS |
                SDL_INIT_JOYSTICK | SDL_INIT_HAPTIC | SDL_INIT_GAMECONTROLLER.

    function SDL_Init externC (flags: UInt32) => Int32.
    function SDL_InitSubSystem externC(flags: UInt32) => Int32.

    function SDL_WasInit externC(flags: UInt32) => UInt32.
    function SDL_Quit externC() => Void.

    ## SDL_video.h
    struct SDL_Window.

    compileTimeConstant SDL_WINDOW_FULLSCREEN := 16r00000001.
    compileTimeConstant SDL_WINDOW_OPENGL := 16r00000002.
    compileTimeConstant SDL_WINDOW_SHOWN := 16r00000004.
    compileTimeConstant SDL_WINDOW_HIDDEN := 16r00000008.
    compileTimeConstant SDL_WINDOW_BORDERLESS := 16r00000010.
    compileTimeConstant SDL_WINDOW_RESIZABLE := 16r00000020.
    compileTimeConstant SDL_WINDOW_MINIMIZED := 16r00000040.
    compileTimeConstant SDL_WINDOW_MAXIMIZED := 16r00000080.
    compileTimeConstant SDL_WINDOW_INPUT_GRABBED := 16r00000100.
    compileTimeConstant SDL_WINDOW_INPUT_FOCUS := 16r00000200.
    compileTimeConstant SDL_WINDOW_MOUSE_FOCUS := 16r00000400.
    compileTimeConstant SDL_WINDOW_FULLSCREEN_DESKTOP := ( SDL_WINDOW_FULLSCREEN | 16r00001000 ).
    compileTimeConstant SDL_WINDOW_FOREIGN := 16r00000800.
    compileTimeConstant SDL_WINDOW_ALLOW_HIGHDPI := 16r00002000.
    compileTimeConstant SDL_WINDOW_MOUSE_CAPTURE := 16r00004000.

    compileTimeConstant SDL_WINDOWPOS_UNDEFINED_MASK := 16r1FFF0000.
    ## #define SDL_WINDOWPOS_UNDEFINED_DISPLAY(X)  (SDL_WINDOWPOS_UNDEFINED_MASK|(X))
    compileTimeConstant SDL_WINDOWPOS_UNDEFINED := SDL_WINDOWPOS_UNDEFINED_MASK.

    compileTimeConstant SDL_WINDOWPOS_CENTERED_MASK := 16r2FFF0000.
    ## #define SDL_WINDOWPOS_CENTERED_DISPLAY(X)  (SDL_WINDOWPOS_CENTERED_MASK|(X))
    compileTimeConstant SDL_WINDOWPOS_CENTERED := SDL_WINDOWPOS_CENTERED_MASK.

    function SDL_CreateWindow externC(title: CTypes ConstString, x: Int32, y: Int32, w: Int32, h: Int32, flags: UInt32) => SDL_Window pointer.
    function SDL_DestroyWindow externC(window: SDL_Window pointer) => Void.

    ## Timer
    function SDL_GetTicks externC() => UInt32.
    function SDL_Delay externC(ms: UInt32) => Void.

    ## Event
    compileTimeConstant SDL_FIRSTEVENT := 0.
    compileTimeConstant SDL_QUIT := 16r100.

    compileTimeConstant SDL_APP_TERMINATING := 16r101.
    compileTimeConstant SDL_APP_LOWMEMORY := 16r102.
    compileTimeConstant SDL_APP_WILLENTERBACKGROUND := 16r103.
    compileTimeConstant SDL_APP_DIDENTERBACKGROUND := 16r104.
    compileTimeConstant SDL_APP_WILLENTERFOREGROUND := 16r105.
    compileTimeConstant SDL_APP_DIDENTERFOREGROUND := 16r106.

    compileTimeConstant SDL_WINDOWEVENT := 16r200.
    compileTimeConstant SDL_SYSWMEVENT := 16r201.

    compileTimeConstant SDL_KEYDOWN := 16r300.
    compileTimeConstant SDL_KEYUP := 16r301.
    compileTimeConstant SDL_TEXTEDITING := 16r302.
    compileTimeConstant SDL_TEXTINPUT := 16r303.
    compileTimeConstant SDL_KEYMAPCHANGED := 16r304.

    compileTimeConstant SDL_MOUSEMOTION := 16r400.
    compileTimeConstant SDL_MOUSEBUTTONDOWN := 16r401.
    compileTimeConstant SDL_MOUSEBUTTONUP := 16r402.
    compileTimeConstant SDL_MOUSEWHEEL := 16r403.

    compileTimeConstant SDL_JOYAXISMOTION := 16r600.
    compileTimeConstant SDL_JOYBALLMOTION := 16r601.
    compileTimeConstant SDL_JOYHATMOTION := 16r602.
    compileTimeConstant SDL_JOYBUTTONDOWN := 16r603.
    compileTimeConstant SDL_JOYBUTTONUP := 16r604.
    compileTimeConstant SDL_JOYDEVICEADDED := 16r605.
    compileTimeConstant SDL_JOYDEVICEREMOVED := 16r606.

    compileTimeConstant SDL_CONTROLLERAXISMOTION := 16r650.
    compileTimeConstant SDL_CONTROLLERBUTTONDOWN := 16r651.
    compileTimeConstant SDL_CONTROLLERBUTTONUP := 16r652.
    compileTimeConstant SDL_CONTROLLERDEVICEADDED := 16r653.
    compileTimeConstant SDL_CONTROLLERDEVICEREMOVED := 16r654.
    compileTimeConstant SDL_CONTROLLERDEVICEREMAPPED := 16r655.

    compileTimeConstant SDL_FINGERDOWN := 16r700.
    compileTimeConstant SDL_FINGERUP := 16r701.
    compileTimeConstant SDL_FINGERMOTION := 16r702.

    compileTimeConstant SDL_DOLLARGESTURE := 16r800.
    compileTimeConstant SDL_DOLLARRECORD := 16r801.
    compileTimeConstant SDL_MULTIGESTURE := 16r802.

    compileTimeConstant SDL_CLIPBOARDUPDATE := 16r900.

    compileTimeConstant SDL_DROPFILE := 16r1000.

    compileTimeConstant SDL_AUDIODEVICEADDED := 16r1100.
    compileTimeConstant SDL_AUDIODEVICEREMOVED := 16r1101.

    compileTimeConstant SDL_RENDER_TARGETS_RESET := 16r2000.
    compileTimeConstant SDL_RENDER_DEVICE_RESET := 16r2001.

    compileTimeConstant SDL_USEREVENT := 16r8000.
    compileTimeConstant SDL_LASTEVENT := 16rffff.

    struct SDL_CommonEvent definition: {
        field type public type: UInt32.
        field timestamp public type: UInt32.
    }.

    struct SDL_WindowEvent definition: {
        field type public type: UInt32.
        field timestamp public type: UInt32.
        field windowID public type: UInt32.
        field event public type: UInt8.
        field padding1 public type: UInt8.
        field padding2 public type: UInt8.
        field padding3 public type: UInt8.
        field data1 public type: Int32.
        field data2 public type: Int32.
    }.

    struct SDL_Keysym definition: {
        field scancode public type: UInt32.
        field sym public type: Keycode.
        field mod public type: UInt16.
        field unused public type: UInt32.
    }.

    struct SDL_KeyboardEvent definition: {
        field type public type: UInt32.
        field timestamp public type: UInt32.
        field windowID public type: UInt32.
        field state public type: UInt8.
        field repeat public type: UInt8.
        field padding2 public type: UInt8.
        field padding3 public type: UInt8.
        field keysym public type: SDL_Keysym.
    }.

    compileTimeConstant SDL_TEXTEDITINGEVENT_TEXT_SIZE := 32.

    struct SDL_TextEditingEvent definition: {
        field type public type: UInt32.
        field timestamp public type: UInt32.
        field windowID public type: UInt32.
        field text public type: (UInt8 array: SDL_TEXTEDITINGEVENT_TEXT_SIZE).
        field start public type: Int32.
        field length public type: Int32.
    }.

    compileTimeConstant SDL_TEXTINPUTEVENT_TEXT_SIZE := 32.

    struct SDL_TextInputEvent definition: {
        field type public type: UInt32.
        field timestamp public type: UInt32.
        field windowID public type: UInt32.
        field text public type: (UInt8 array: SDL_TEXTINPUTEVENT_TEXT_SIZE).
    }.

    struct SDL_MouseMotionEvent definition: {
        field type public type: UInt32.
        field timestamp public type: UInt32.
        field windowID public type: UInt32.
        field which public type: UInt32.
        field state public type: UInt32.
        field x public type: Int32.
        field y public type: Int32.
        field xrel public type: Int32.
        field yrel public type: Int32.
    }.

    struct SDL_MouseButtonEvent definition: {
        field type public type: UInt32.
        field timestamp public type: UInt32.
        field windowID public type: UInt32.
        field which public type: UInt32.
        field button public type: UInt8.
        field state public type: UInt8.
        field clicks public type: UInt8.
        field padding1 public type: UInt8.
        field x public type: Int32.
        field y public type: Int32.
    }.

    struct SDL_MouseWheelEvent definition: {
        field type public type: UInt32.
        field timestamp public type: UInt32.
        field windowID public type: UInt32.
        field which public type: UInt32.
        field x public type: Int32.
        field y public type: Int32.
        field direction public type: UInt32.
    }.

    struct SDL_Event definition: {
        field type public type: UInt32.
        field common public type: SDL_CommonEvent.
        field window public type: SDL_WindowEvent.
        field key public type: SDL_KeyboardEvent.
        field padding public type: (UInt8 array: 56).
    }.

    function SDL_PollEvent externC (event: SDL_Event pointer) => BooleanBit.

    ## Rect
    struct SDL_Point definition: {
        field x public type: Int32.
        field y public type: Int32
    }.

    struct SDL_Rect definition: {
        field x public type: Int32.
        field y public type: Int32.
        field w public type: Int32.
        field h public type: Int32.
    }.

    ## Renderer
    compileTimeConstant SDL_RENDERER_SOFTWARE value: 16r00000001.
    compileTimeConstant SDL_RENDERER_ACCELERATED value: 16r00000002.
    compileTimeConstant SDL_RENDERER_PRESENTVSYNC value: 16r00000004.
    compileTimeConstant SDL_RENDERER_TARGETTEXTURE value: 16r00000008.

    struct SDL_Renderer.
    struct SDL_Texture.

    function SDL_CreateRenderer externC(window: SDL_Window pointer, index: Int32, flags: UInt32) => SDL_Renderer pointer.
    function SDL_CreateTexture externC(renderer: SDL_Renderer pointer, format: UInt32, access: Int32, w: Int32, h: Int32) => SDL_Texture pointer.

    function SDL_SetRenderDrawColor externC(renderer: SDL_Renderer pointer, r: UInt8, g: UInt8, b: UInt8, a: UInt8) => Int32.
    function SDL_GetRenderDrawColor externC(renderer: SDL_Renderer pointer, r: UInt8 pointer, g: UInt8 pointer, b: UInt8 pointer, a: UInt8 pointer) => Int32.

    function SDL_RenderClear externC(renderer: SDL_Renderer pointer) => Int32.

    function SDL_RenderDrawPoint externC(renderer: SDL_Renderer pointer, x: Int32, y: Int32) => Int32.
    function SDL_RenderDrawPoints externC(renderer: SDL_Renderer pointer, points: SDL_Point const pointer, count: Int32) => Int32.

    function SDL_RenderDrawLine externC(renderer: SDL_Renderer pointer, x1: Int32, y1: Int32, x2: Int32, y2: Int32) => Int32.
    function SDL_RenderDrawLines externC(renderer: SDL_Renderer pointer, points: SDL_Point const pointer, count: Int32) => Int32.

    function SDL_RenderDrawRect externC(renderer: SDL_Renderer pointer, rect: SDL_Rect const pointer) => Int32.
    function SDL_RenderDrawRects externC(renderer: SDL_Renderer pointer, rects: SDL_Rect const pointer, count: Int32) => Int32.

    function SDL_RenderFillRect externC(renderer: SDL_Renderer pointer, rect: SDL_Rect const pointer) => Int32.
    function SDL_RenderFillRects externC(renderer: SDL_Renderer pointer, rect: SDL_Rect const pointer, count: Int32) => Int32.

    function SDL_RenderPresent externC(renderer: SDL_Renderer pointer) => Void.

    function SDL_DestroyTexture externC(texture: SDL_Texture pointer) => Void.
    function SDL_DestroyRenderer externC(renderer: SDL_Renderer pointer) => Void.
}.
