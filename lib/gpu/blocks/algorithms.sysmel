namespace GPUBlockConversion definition: {
template CollectionMapShader(MF: _FunctionType ref)
:= class definition: {
	compileTimeConstant MapFunction := MF.
	compileTimeConstant FunctionType := MapFunction typeOfExpression baseType.
	compileTimeConstant InputType := FunctionType argumentTypes first.
	compileTimeConstant OutputType := FunctionType returnType.

	struct InputBuffer definition: {
		public field data type: InputType array.
	}.
	struct OutputBuffer definition: {
		public field data type: OutputType array.
	}.

	struct ComputationBindings definition: {
		public field inputBuffer type: InputBuffer storageBufferPointer.
		public field outputBuffer type: OutputBuffer storageBufferPointer.
	}.

	public field arguments type: ComputationBindings bindingSetPointer.

	function main computeShader(stageIn: GPU ComputeStageInput inputChannel) => Void := {
		<localSize: #(4 4 4)>
		let localSize := UInt32x3(4, 4, 4).
		let collectionElement := stageIn receive globalIndex.

		arguments _ outputBuffer _ data [collectionElement] := MapFunction(arguments _ inputBuffer _ data [collectionElement]).
	}.
}.

}. ## End of namespace GPUBlockConversion
