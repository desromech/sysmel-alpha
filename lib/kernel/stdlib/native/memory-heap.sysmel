namespace StdNative definition: {

/**
 * GenericMemoryHeap
 * A data structure for implementing malloc/free and family.
 */
template GenericMemoryHeap(BC: Type)
    := class superclass: BC;
definition: {
    field mutex private type: Mutex.

    message allocate: (size: UIntPointer) ::=> Void pointer := {
        mutex heldInThisContext.

        nil.
    }.

    message free: (pointer: Void pointer) ::=> Void := {
        // Ignore null pointers.
        if: pointer == nil then: {
            return: nil
        }.

        mutex heldInThisContext.
    }
}.

/**
 * The native memory heap.
 */
alias NativeMemoryHeap := GenericMemoryHeap(NativeVirtualMemoryInterface).

global globalNativeMemoryHeap mutable type: NativeMemoryHeap.

function malloc(size: UIntPointer) => Void pointer := globalNativeMemoryHeap allocate: size.
function free(pointer: Void pointer) => Void := globalNativeMemoryHeap free: pointer.

}. // End of namespace StdNative
