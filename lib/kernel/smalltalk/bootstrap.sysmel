namespace Sysmel definition: {
Compiler compilationTarget
    managedClassTypeTrait: trait ManagedClassTrait;
    dynamicObjectType: type Dynobject.

Type extend: {
    message gcpointer -> _CompilerObjectType := {
        return: (self pointerFor: #gc)
    }.
}.

ManagedClassTrait uses: AnyValue;
definition: {
}.

UndefinedType conversionTo: ManagedClassTrait doOn: {
    evaluation: $$Pharo {
        value: value targetType: targetType at: position
            ^ value sameValueButWithType: targetType
    }.
    codeGeneration: $$Pharo {
        convertSSAValue: sourceValue to: targetType with: builder at: messageNode
            ^ targetType defaultSSAValueWith: builder
    }.
}.

// Variable data trait

}.

namespace Smalltalk definition: {

// Meta circular hierarchy
gcclass ProtoObject.
gcclass Metaclass.

ProtoObject metaClassClass: Metaclass.

gcclass Object superclass: ProtoObject.
    gcclass Behavior superclass: Object.
        gcclass ClassDescription superclass: Behavior.
            gcclass Class superclass: ClassDescription.
            gcclass Metaclass superclass: ClassDescription.

    // BooleanBit
    gcclass Boolean superclass: Object.
        gcclass True superclass: Boolean.
        gcclass False superclass: Boolean.

    // Undefind object
    gcclass UndefinedObject superclass: Object.

    // Numbers
    gcclass Magnitude superclass: Object.
        gcclass Number superclass: Magnitude.
            gcclass Float superclass: Number.
                gcclass BoxedFloat64 superclass: Float.
                gcclass SmallFloat64 superclass: Float.
            gcclass Integer superclass: Number.
                gcclass LargeInteger superclass: Integer.
                    gcclass LargeNegativeInteger superclass: LargeInteger.
                    gcclass LargePositiveInteger superclass: LargeInteger.
                gcclass SmallInteger superclass: Integer.


    gcclass GCLayout superclass: Object.

// Essential collections
gcclass Collection superclass: Object.
    gcclass HashedCollection superclass: Collection.
        gcclass Dictionary superclass: HashedCollection.
        gcclass MethodDictionary superclass: Dictionary.
    gcclass SequenceableCollection superclass: Collection.
        gcclass ArrayedCollection superclass: SequenceableCollection.
            gcclass Array superclass: ArrayedCollection.
            gcclass ByteArray superclass: ArrayedCollection.
            gcclass FloatArray superclass: ArrayedCollection.
            gcclass IntegerArray superclass: ArrayedCollection.
            gcclass WordArray superclass: ArrayedCollection.

            gcclass String superclass: ArrayedCollection.
                gcclass Symbol superclass: String.

// Methods
gcclass CompiledMethod superclass: Object.

// ProtoObject
ProtoObject type superclass: Class.

ProtoObject definition: {
    field __class private type: Behavior.
}.

Behavior uses: Type; definition: {
    field superclass public type: Behavior.
    field methodDict public type: MethodDictionary.
    field gclayout public type: GCLayout.
    field slots public type: Array.

    field instanceDataSize public type: UIntPointer.
    field instanceDataAlignment public type: UIntPointer.

    field variableInstanceElementSize public type: UIntPointer.
    field variableInstanceElementAlignment public type: UIntPointer.

    message asReceiverType -> SelfType := {
        return: self
    }.

    message cvariadicCoercionType -> SelfType := {
        return: self
    }.

    message lookupSelector: (selector: Object) ::-> Object := {
        [[staticBinding]]
        return: nil
    }.
}.

Class definition: {
    field name protected type: Symbol.

    message name -> Symbol := {
        return: name
    }.
}.

Metaclass definition: {
    field thisClass protected type: Behavior.

    message isMetaType -> BooleanBit := {
        return: true
    }.
}.

// GCLayoutRecord
struct GCLayoutRecord definition: {
    field type public type: UIntPointer.
    field offset public type: UIntPointer.
    field size public type: UIntPointer.
}.

// GCLayout
GCLayout definition: {
    field records public type: GCLayoutRecord array.
}.

// String
String definition: {
    field __data protected type: UInt8 array.
}.

//-----------------------------------------------------------------------------
ProtoObject definition: {
    message class -> Behavior := {
        return: __class
    }
}.

//-----------------------------------------------------------------------------
// Important collections
HashedCollection definition: {
    field tally protected type: UIntPointer.
    field array protected type: Array.
}.

//-----------------------------------------------------------------------------
// Normal message lookup

function normalMessageLookup(object: Void pointer, selector: Object) -> Void pointer := {
    return: nil
}.

}.
