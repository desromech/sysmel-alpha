namespace Smalltalk definition: {

gcclass Exception definition: {
    protected field messageText.

    meta definition: {
        method signal
            := self new signal.

        method signal: signalerMessage
            := self new signal: signalerMessage.
    }.

    method signal: signalerMessage := {
        messageText := signalerMessage.
        self signal.
    }.

    method messageText := {
        messageText ifNil: {return: ""}.
        messageText
    }.

    method description := {
        String streamContents: {:out :: Void |
            out << self class name.
            let messageText := self messageText.
            messageText isEmptyOrNil ifFalse: {
                out << ": " << messageText
            }
        }.
    }.

    method printOn: aStream := {
        aStream nextPutAll: self description
    }.
}.

gcclass Error superclass: Exception; definition: {
}.


gcclass ArithmeticError superclass: Error; definition: {}.
gcclass DomainError superclass: ArithmeticError; definition: {
    public field from.
    public field to.
}.
gcclass FloatingPointException superclass: ArithmeticError; definition: {}.
gcclass NaNException superclass: ArithmeticError; definition: {}.
gcclass ZeroDivide superclass: ArithmeticError; definition: {}.

gcclass AssertionFailure superclass: Error; definition: {}.
gcclass CannotReturn superclass: Error; definition: {}.
gcclass BlockCannotReturn superclass: CannotReturn; definition: {}.
gcclass ContextCannotReturn superclass: CannotReturn; definition: {}.

gcclass MessageNotUnderstood superclass: Error; definition: {
    public field message.
    public field receiver.
}.

gcclass CannotPerformCastError superclass: Error; definition: {}.

gcclass SelectorException superclass: Error; definition: {}.
gcclass NotYetImplemented superclass: SelectorException; definition: {}.
gcclass PrimitiveFailed superclass: SelectorException; definition: {}.
gcclass ShouldBeImplemented superclass: SelectorException; definition: {}.
gcclass ShouldNotImplement superclass: SelectorException; definition: {}.
gcclass SubclassResponsibility superclass: SelectorException; definition: {}.

gcclass SubscriptOutOfBounds superclass: Error; definition: {
    public field subscript.
    public field lowerBound.
    public field upperBound.
}.

gcclass Halt superclass: Exception; definition: {
}.

gcclass UnhandledError superclass: Exception; definition: {
}.

ProtoObject extend: {
    method doesNotUnderstand: aMessage
        := MessageNotUnderstood new
            message: aMessage;
            receiver: self;
            signal.
}.

Object extend: {
    method error: message
        := Error new signal: message.
}.

}.
