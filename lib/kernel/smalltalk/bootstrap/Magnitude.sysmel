namespace Smalltalk definition: {

Object extend: {
    message isNumber := false.
    message isInteger := false.
    message isFraction := false.
    message isFloat := false.
}.

Number extend: {
    message isNumber := true.

    message + aNumber := {
        StdNative fatalError: "Unimplemented Number >> #+".
		self
    }.
}.

Integer extend: {
    message isInteger := true.

    message + aNumber := {
        super + aNumber
    }.
}.

Fraction extend: {
    message isFraction := true.

    message + aNumber := {
        super + aNumber
    }.
}.

SmallInteger extend: {
    message + aNumber := {
		aNumber __isSmallInteger ifTrue: {
			let a := self __decodeSmallInteger.
			let b := aNumber __decodeSmallInteger.
			##return: a + b
		}.

        super + aNumber
    }.

    message - aNumber := {
		aNumber __isSmallInteger ifTrue: {
			let a := self __decodeSmallInteger.
			let b := aNumber __decodeSmallInteger.
			##return: a - b
		}.

        super - aNumber
    }.

}.

Float extend: {
    message isFloat := true.

    message + aNumber := {
        super + aNumber
    }.
}.
}. ## End of namespace Smalltalk
