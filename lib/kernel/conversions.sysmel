namespace SysmelKernel definition: {

// Explicit cast
AnyValue macro selector: #castTo: doOn: {
    evaluation: $$Pharo {
        evaluateMessage: message inEnvironment: anEnvironment
            self halt
    }.

    semanticAnalysis: $$Pharo {
        semanticAnalyzeMessage: message inEnvironment: environment at: aPosition
            | targetType receiverType conversionRule |
            targetType := message arguments first analyzeAndEvaluateInEnvironment: environment.
            targetType type isMetaObjectType ifFalse: [
                self error: 'Expected compiler object as the target type.'at: aPosition.
            ].

            targetType := targetType value.
            targetType isType ifFalse: [
                self error: 'Expected a type instead of value {1}.' format: {targetType value printString } at: aPosition.
            ].

            receiverType := message receiver evaluateTypeInEnvironment: environment.
            conversionRule := receiverType node: message receiver convertedExplicitlyInto: targetType at: aPosition.
            ^ message copy
        		arguments: #();
        		metaMethod: self;
        		coercionType: targetType;
        		coercionRule: conversionRule;
        		valueType: targetType;
        		yourself
    }.

    codeGeneration: $$Pharo {
        generateMessage: messageNode ssaCodeWith: builder
            ^  messageNode coercionRule
                convertSSAValue: (messageNode receiver generateSSACodeWith: builder)
                to: messageNode coercionType with: builder at: messageNode
    }.
}.

// Literal type conversions.
_LiteralInteger conversionTo: PrimitiveIntegerType doOn: {
    evaluation: $$Pharo {
        value: value into: targetType at: coercionPosition
            ^ value sameValueButWithType: targetType
    }.
    codeGeneration: $$Pharo {
        convertSSAValue: sourceValue to: targetType with: builder at: messageNode
            ^ SLVMConstant type: targetType ssaType value: sourceValue
    }.
}.

_LiteralFloat conversionTo: PrimitiveFloatingPointType doOn: {
    evaluation: $$Pharo {
        value: value into: targetType at: coercionPosition
            ^ value sameValueButWithType: targetType
    }.
    codeGeneration: $$Pharo {
        convertSSAValue: sourceValue to: targetType with: builder at: messageNode
            ^ SLVMConstant type: targetType ssaType value: sourceValue asFloat
    }.
}.

LiteralType conversionTo: _CompilerObjectType doOn: {
    evaluation: $$Pharo {
        value: value targetType: targetType at: position
            ^ value sameValueButWithType: targetType
    }.
    codeGeneration: $$Pharo {
        convertSSAValue: sourceValue to: targetType with: builder at: messageNode
            self halt.
    }.
}.

_APSGNodeType conversionTo: _CompilerObjectType doOn: {
    evaluation: $$Pharo {
        value: value targetType: targetType at: position
            ^ value sameValueButWithType: targetType
    }.
    codeGeneration: $$Pharo {
        convertSSAValue: sourceValue to: targetType with: builder at: messageNode
            self halt.
    }.
}.

_LiteralString conversionTo: Char const pointer doOn: {
    evaluation: $$Pharo {
        value: value targetType: targetType at: position
            self halt
    }.
    codeGeneration: $$Pharo {
        convertSSAValue: sourceValue to: targetType with: builder at: messageNode
            ^ builder constCString: sourceValue
    }.
}.

// Generic integer cast.
let intCastConversionAction := {
    evaluation: $$Pharo {
        value: value targetType: targetType at: position
            ^ value sameValueButWithType: targetType
    }.
    codeGeneration: $$Pharo {
        convertSSAValue: sourceValue to: targetType with: builder at: messageNode
            ^ builder intCast: sourceValue target: targetType ssaType
    }.
}.

// Signed integer widening casts
Int8 conversionTo: Int16 | Int32 | Int64 doOn: intCastConversionAction.
Int16 conversionTo: Int32 | Int64 doOn: intCastConversionAction.
Int32 conversionTo: Int64 doOn: intCastConversionAction.

// Unsigned integer widening casts
UInt8 conversionTo: UInt16 | Int16 | UInt32 | Int32 | UInt64 | Int64 doOn: intCastConversionAction.
UInt16 conversionTo: UInt32 | Int32 | UInt64 | Int64 doOn: intCastConversionAction.
UInt32 conversionTo: UInt64 | Int64 doOn: intCastConversionAction.

// Explicit integer narrowing conversions
UInt64 | Int64 explicitConversionTo: Int32 | Int16 | Int8 doOn: intCastConversionAction.
UInt32 | Int32 explicitConversionTo: Int16 | Int8 doOn: intCastConversionAction.
UInt16 | Int16 explicitConversionTo: Int8 doOn: intCastConversionAction.

// Explicit integer signed conversions.
UInt64 explicitConversionTo: Int64 doOn: intCastConversionAction.
Int64 explicitConversionTo: UInt64 doOn: intCastConversionAction.
UInt32 explicitConversionTo: Int32 doOn: intCastConversionAction.
Int32 explicitConversionTo: UInt32 doOn: intCastConversionAction.
UInt16 explicitConversionTo: Int16 doOn: intCastConversionAction.
Int16 explicitConversionTo: UInt16 doOn: intCastConversionAction.
UInt8 explicitConversionTo: Int8 doOn: intCastConversionAction.
Int8 explicitConversionTo: UInt8 doOn: intCastConversionAction.

// Floating point conversions
let floatingPointCastAction := {
    evaluation: $$Pharo {
        value: value targetType: targetType at: position
            ^ value sameValueButWithType: targetType
    }.
    codeGeneration: $$Pharo {
        convertSSAValue: sourceValue to: targetType with: builder at: messageNode
            ^ builder floatingPointCast: sourceValue target: targetType ssaType
    }.
}.

Float32 conversionTo: Float64 doOn: floatingPointCastAction.
Float64 explicitConversionTo: Float32 doOn: floatingPointCastAction.

// Integer to float
PrimitiveIntegerType conversionTo: PrimitiveFloatingPointType doOn: {
    evaluation: $$Pharo {
        value: value targetType: targetType at: position
            self halt
    }.
    codeGeneration: $$Pharo {
        convertSSAValue: sourceValue to: targetType with: builder at: messageNode
            ^ builder intToFloatCast: sourceValue target: targetType ssaType
    }.
}.
}. // End of namespace SysmelKernel
